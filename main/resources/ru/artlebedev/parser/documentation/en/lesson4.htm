<html>
<head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html;charset=iso-8859-1">
    <meta name="keywords" content="main,auto.p,sql">
    <title>Lesson 4. Second step—working with databases</title>

    <script language="JavaScript"><!--
    if(top.frames.length==0) {
        top.location.href='./?lesson4.htm'
    } else {
        if(document.referrer!='' && 0>document.referrer.indexOf(top.frames[0].location.pathname)) {
            top.frames[0].location.hash='lesson4.htm'
        }
    }
    //--></script>

</head>

<body bgcolor="#FFFFFF" text="black">


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>Lesson 4. Second step-working with databases
<br>
</b></span>
    </td>
  </tr>
  <tr><td bgcolor="#99D228" height="3"></td></tr>
</table>
<br>



<span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">First of all, you shouldn't be scared of the title, even if you have never dealt with databases (further referred to as DB). You cannot do without them if you want to build a flexible, easy-to-tune-up site. By refusing to work with databases you don't make your life easier but limit yourself, since databases provide many useful opportunities. Trying to build a professional site without DB is like fishing without a fishing-rod: you surely can catch a fish with your own hands, but why complicate your life? In short, if you have never dealt with DB, you'd better start it as soon as possible and use it in all your projects. OK, let's get off this little propaganda and presume you now fully realize the necessity of working with DB.
<br>

<br>
Working with DB in Parser is easy. Parser has a good system of interacting with various DBMS (Database Management Systems), such as MySQL, Oracle, PgSQL or any ODBC-based DBMS (that is MS SQL, MS Access, etc.). Since Parser is an open-source project, one can add support for any DBMS by creating appropriate driver). To work with DB, you don't have to possess any additional skills in Parser. All you need to do is connect to a DBMS and use SQL queries that this DBMS supports. Parser may only replace apostrophes for a relevant construction (that depends on DB type) as a "fool-proof," while the rest will be transferred as-is.
<br>

<br>
<i>There is also a special construction used for long string literals. Oracle, PgSQL and, perhaps, some servers, drivers to which may be created in the future, cannot handle long strings properly. If a string input, which is transferred, for example, from form to database, is more than 2000 [Oracle 7.x] or 4000 [Oracle 8.x] characters long, the server will report an error like "literal is too long." If you try to cheat by combining "2000 characters" + "2000 characters" there will be another error like "sum is too great." To store such constructions, we usually use data type CLOB [Oracle] and OID [PgSQL] and, to make SQL commands simplest, we should add a control comment which will be properly interpreted by a driver of SQL server:</i><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><i>
<br>
</i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>
<br>
insert&nbsp;into&nbsp;news&nbsp;text&nbsp;values&nbsp;(/**text**/'$form:text')
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i>
<br>
</i><i>Word </i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><i>text</i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i> in construction </i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><i>/**text**/</i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i> is the name of a column to which we input the string that follows. There must be NO spaces inside it!
<br>
</i>
<br>
Of course, we will not try to cover in one lesson each and every opportunity Parser provides for working with various types of DBMS. We will choose MySQL as the most widely used and, therefore, included as a usual service by most of the hosting providers. Besides, it is free of charge and easy to master.
<br>

<br>
What are we going to store in our DB? Most obvious answer is news. The table with news must have the following fields: a unique number of a news article in DB (to be generated automatically by DBMS), date indicating when the news was added to DB (this we need to retrieve news related to a certain date), news header and the text (news itself). Such a structure will be simple but effective.
<br>

<br>
We also need to decide how the news will get into DB. We can use DBMS command line for this purpose, but it is not at all comfortable. If you are going to build a site for an intranet, you can use popular and simple DBMS Microsoft Access. In this case, familiar interface and copy+paste will suit the purpose well and make you a star among your colleagues for many years. We, however, propose a solution for Internet which is to create a section for administration purposes which will include a page with HTML form to input news articles right in your browser.
<br>

<br>
That's the task which is to be handled. Let's now see how we'll do it. For this lesson, you must have MySQL DBMS installed (without it the whole lot of code will simply not work).
<br>

<br>
First of all, we should create a DB </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>p3test</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, containing sole table </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>news</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> with fields (columns) </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>id</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>date</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>header</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>body</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:Times New Roman; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><table border="1" cellpadding="1"><tr><td align="left" valign="top" width="102">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>id</b><b>
<br>
</b></span></td><td align="left" valign="top" width="335">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>int not null auto_increment primary key</b>
<br>
</span></td></tr><tr><td align="left" valign="top" width="102">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>date</b><b>
<br>
</b></span></td><td align="left" valign="top" width="335">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>date</b>
<br>
</span></td></tr><tr><td align="left" valign="top" width="102">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>header</b><b>
<br>
</b></span></td><td align="left" valign="top" width="335">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>varchar(255)</b>
<br>
</span></td></tr><tr><td align="left" valign="top" width="102">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>body</b>
<br>
</span></td><td align="left" valign="top" width="335">
<span style="font-family:Monospace; font-size:10pt; color:#000000"><b>text</b>
<br>
</span></td></tr></table>
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
Now we create administration section, which will allow us to fill this DB with news articles. We will create directory </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>/admin/</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and, inside it, file </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>index.html</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, in which we put the following:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>@greeting[]
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>News&nbsp;DB&nbsp;management</b></span><span style="font-family:Monospace; font-size:12pt; color:#000000"><b>
<br>
</b></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
@body_additional[]
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>Adding&nbsp;news</b></span><span style="font-family:Monospace; font-size:12pt; color:#000000"><b>
<br>
</b></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
@body_main[]
<br>
$now[^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datenow.htm>date::now</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>[]]
<br>

<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;center&gt;
<br>
&lt;form&nbsp;method="POST"&gt;
<br>
&lt;p&gt;
<br>
Date:&nbsp;&lt;input&nbsp;name="date"&nbsp;value="</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${now.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datefields.htm>year</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>-</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${now.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datefields.htm>month</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>-</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${now.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datefields.htm>day</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>"&gt;
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
<br>
Header:&nbsp;&lt;input&nbsp;name="header"&gt;
<br>
&lt;/p&gt;
<br>
&lt;p&gt;Body:&lt;br&nbsp;/&gt;
<br>
&lt;textarea&nbsp;cols="50"&nbsp;name="body"&nbsp;rows="5"&gt;&lt;/textarea&gt;
<br>
&lt;/p&gt;
<br>
&lt;p&gt;
<br>
&lt;input&nbsp;type="submit"&nbsp;value="Add&nbsp;New"&nbsp;name="posted"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
<br>
&lt;input&nbsp;type="reset"&nbsp;value="Cancel"&gt;
<br>
&lt;/p&gt;
<br>
&lt;/form&gt;
<br>

<br>
</b><b>#start&nbsp;processing</b></span><span style="font-family:Monospace; font-size:12pt; color:#000000"><b>
<br>
</b></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>^if(</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=opdef.htm>def </a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=formfield.htm>form:date</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>&nbsp;</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=exprops.htm>&amp;&amp;</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>&nbsp;def&nbsp;$form:header&nbsp;&amp;&amp;&nbsp;def&nbsp;$form:body){
<br>
&nbsp;&nbsp;&nbsp;^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=opconnect.htm>connect</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>[$connect_string]{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=voidsql.htm>void:sql</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>{insert&nbsp;into&nbsp;news
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(date,&nbsp;header,&nbsp;body)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;('$form:date',&nbsp;'$form:header',&nbsp;'$form:body')
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b><b>&#133;news&nbsp;added
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
}{
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;&nbsp;&nbsp;&#133;cannot&nbsp;add&nbsp;the&nbsp;news&amp;nbsp^;&amp;#151^;&nbsp;&nbsp;all&nbsp;form&nbsp;fields&nbsp;must&nbsp;be&nbsp;filled
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;/center&gt;</b><b>
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
You also need to add method </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>auto</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> before method </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>main&nbsp;</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">in root-directory </span><span style="font-family:Monospace; font-size:10pt; color:#000000">auto.p</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">. This method is used to initialize global variables, i.e. the variables which will be accessible everywhere on the site. Within this method we will set DB connect string, which we'll return to a bit later:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>@auto[]
<br>
$connect_string[</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=app3mysql.htm>mysql://root@localhost/p3test</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>]
<br>

<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">As you see, the structure of this page is totally compliant with the general structure of all our pages. Elements </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>greeting</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>body</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> (both parts of it), </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>footer</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>header</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> are all there. By the way, do you remember how we make </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>header</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>footer</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> appear on this page? Yes, we call them from within function </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>main</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> located in root </span><span style="font-family:Monospace; font-size:10pt; color:#000000">auto.p</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">.
<br>

<br>
We find unfamiliar constructions only in the main part. Let's examine it. In the beginning we see a usual HTML form with current date included as a default value for field </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>date</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">. This we do to make it comfortable for users. However, the line
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${now.year}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>-</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${now.month}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>-</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${now.day}
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
seems strange. We use curly brackets here to get a string like "2001-11-06" (this is the format we'll use to store dates in DB). If we don't place curly brackets here, Parser will report an error because it will not understand what to do with this code. In such a construction (without curly brackets), i.e.:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$now.year-$now.month-$now.day
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
a hyphen will be regarded as a part of the name. Remember that you should separate the name of a variable from a character that follows (dot, hyphen, semicolon, any letter or number, etc., except space character). Thus, if you need a hyphen to immediately follow the variable value, you should write:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>${</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>variable_name</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>-</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
and you will get:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>variable_value-
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">Please, read the page with name-building rules carefully
<br>

<br>
<i>We would best solve the problem with date by using </i><b><i>here</i></b><i> construction </i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><i>^date.sql-string[]</i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i>. </i><i>You can try to do it by yourself using Parser language reference. If you still can't cope with it-don't worry, we'll show you how to do it in the next lesson.
<br>
</i>
<br>
Let's go on. If you have already dealt with HTML forms you know that forms send the data filled in by a visitor to some scripts for further processing. In our case the script for processing data will be the page with the form itself. We will need no additional scripts.
<br>

<br>
After closing tag </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;/form&gt;</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, we have data processing block. First, with the help of </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>if</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, we check whether the form fields are not blank. We might do without it, but we want to make something that will not be a mere exhibit-we want our form to work perfectly in real-world conditions. In order to check, we have to get the values of form fields. In Parser, we do it by simply referring to form fields as to static fields:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$form:</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>field_name
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
The values thus retrieved we will check (whether they are blank or not) with the help of operator </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>def</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and logical "AND" (</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&amp;&amp;</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">). We have also performed such a check in Lesson 3, but we didn't use </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>def</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, as we checked whether a table was empty or not. As you remember, a table has a numerical value, which is the number of its rows, so any non-empty table is considered definite. Here, however, we must use </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>def</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> the same way we do to check any other object. If a field of our form remained empty when submitted, the value of </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>$form:field_name</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> will be considered undefined. Now, that we are sure that all the fields are filled in, we must store them in DB. We do it by first connecting to DB and then sending an SQL query that will put the data into table. Here is how we do it:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>^connect[$connect_string]{
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>&nbsp;&nbsp;&nbsp;^void:sql{insert&nbsp;into&nbsp;news
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(date,&nbsp;header,&nbsp;body)
<br>
&nbsp;&nbsp;&nbsp;values&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;('$form:date',&nbsp;'$form:header',&nbsp;'$form:body')
<br>
&nbsp;&nbsp;&nbsp;}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;&nbsp;&nbsp;&#133;</b><b>news&nbsp;added</b><b>
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
The most comfortable thing in Parser is that, except in some rare cases, you don't have to learn any constructions to work with DB except those required by DBMS itself. Database session is contained within operator </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>connect</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> which has the syntax:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^connect[protocol://connect&nbsp;string]{methods&nbsp;working&nbsp;with&nbsp;SQL&nbsp;queries}
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
For MySQL it will look like:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^connect[mysql://username:password@host/data_base]{&#133;}
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
where curly brackets contain methods working with SQL queries. A query may return some data or nothing (in our case, for example, we just add a new entry to DB and don't request any data). In Parser we use different constructions for these two types of queries. In our case, the query is written like this:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>^void:sql{</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>insert&nbsp;into&nbsp;news&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(date,&nbsp;header,&nbsp;body)
<br>
&nbsp;&nbsp;&nbsp;values
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;('</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$form:date</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>',&nbsp;'</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$form:header</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>',&nbsp;'</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$form:body</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>')
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
By the way, this is a static method of class </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>void</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> (remember the semicolon?).
<br>

<br>
The uncolored part of this construction is SQL commands. Everything is easy here. If you know SQL, you will need nothing else but if you don't, we would again strongly recommend you to study it, as the benefits of using SQL are numerous.
<br>

<br>
Do appreciate how simply and gracefully Parser interacts with DB! It provides a comprehensible access to DBMS and (except in some rare cases) requires no additional knowledge. As you see, we also can add data from our form to SQL queries using Parser constructions. The opportunities provided by this symbiosis are unlimited. DBMS handles the problems connected with data processing (as it is designed for this very purpose and suits it quite well), and we just use the results. The situation is just the same with any DBMS that you may deal with.
<br>

<br>
Now we have a form allowing us to add records to our DB. Add several records to it. Now we're going to retrieve them. Before we do it, we need to complete function </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>calendar</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, which we created in previous lesson. We should place links on dates so that the date could be passed to our script as a form field. Such a link will then direct a user to news archive and retrieve news for the chosen date. Such an enhancement is not a hard task; we'll just have to add some HTML to </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>/news/auto.p</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">. Within operator </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>if</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> we will surround </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>$days.$week_day&nbsp;</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">with the anchor tags like this:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;a&nbsp;href="/news/?day=</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$days.$week_day</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>"&gt;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$days.$week_day</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;/a&gt;
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
As a result, visitors will be able to use our calendar as a menu and select news related to a certain date.
<br>

<br>
Let's now deal with </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>/news/index.html</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">. We add to it the code:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>@greeting[]
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>News&nbsp;page,&nbsp;Keep&nbsp;up&nbsp;to&nbsp;date!</b></span><span style="font-family:Monospace; font-size:12pt; color:#000000"><b>
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>@body_additional[]
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;center&gt;News&nbsp;Archive&nbsp;for&nbsp;Current&nbsp;Month:&lt;/center&gt;</b><b>
<br>
&lt;br&nbsp;/&gt;</b><b>
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>^calendar[]
<br>

<br>
@body_main[]
<br>
$now[^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datenow.htm>date::now</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>[]]
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;b&gt;&lt;h1&gt;NEWS&lt;/h1&gt;&lt;/b&gt;
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$day(^if(def&nbsp;$form:day){
<br>
&nbsp;&nbsp;&nbsp;$</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=formclass.htm>form</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>:</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=formfields.htm>day</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
}{
<br>
&nbsp;&nbsp;&nbsp;$now.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datefields.htm>day</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>)</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=opconnect.htm>connect</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>[$connect_string]{
<br>
&nbsp;&nbsp;&nbsp;$news[^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=tablesql.htm>table::sql</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>{select
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date,&nbsp;header,&nbsp;body&nbsp;
<br>
&nbsp;&nbsp;&nbsp;from
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;news&nbsp;
<br>
&nbsp;&nbsp;&nbsp;where
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date='${now.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datefields.htm>year</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}-${now.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=datefields.htm>month</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}-$day'
<br>
&nbsp;&nbsp;&nbsp;}]
<br>
&nbsp;&nbsp;&nbsp;^if($news){
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^news.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=tablemenu.htm>menu</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>{
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;b&gt;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>$news.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=tablefields.htm>date</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>-$news.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=tablefields.htm>header</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;/b&gt;&lt;br&nbsp;/&gt;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=opuntainttaint.htm>untaint</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>{$news.</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b><a href=tablefields.htm>body</a></b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;br&nbsp;/&gt;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}[</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&lt;br&nbsp;/&gt;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>]
<br>
&nbsp;&nbsp;&nbsp;}{
<br>
</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;&nbsp;&nbsp;</b><b>&nbsp;&nbsp;&nbsp;</b><b>Sorry,&nbsp;no&nbsp;news&nbsp;for&nbsp;selected&nbsp;period.
<br>
</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>&nbsp;&nbsp;&nbsp;}
<br>
}
<br>
</b></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
The structure is usual. In additional part of </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>body</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> we place calendar by calling </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^calendar[]</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> (remember: this function is defined in </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>/news/auto.p</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">). Information part of the page is based on data retrieved from news database and related to the date user selected by clicking on respective link in our calendar (</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>where</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">-part of SQL query). This is a second type of SQL query, which we use to <i>retrieve</i> data. Note that our query will result in table which we'll use further on. We therefore need to create an object of class </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>table</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">.
<br>

<br>
Let's get to know another constructor of class </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>table</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, which is based on SQL query. Its logic is similar to that of </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^</b><b><a href=tableload.htm>table::load[]</a></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">. The difference is that the source of data here is not a text file (such as we used to create navigation menu) but SQL query result, i.e. data retrieved from DB:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>$variable[^table::sql{SQL&nbsp;query}]
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
You can use this constructor only within operator </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^connect[]</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">, that is when you have connection with DB open, because SQL queries processing is handled by DBMS itself. The returned result will be a table, where column names will be the same as the headers returned by SQL server as answer to the query.
<br>

<br>
<i>A short digression: We recommend that you avoid constructions like </i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><i>select&nbsp;*&nbsp;from&nbsp;...&nbsp;</i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i>because an outsider, who doesn't know the structure of the table addressed, will not understand what data will be returned by DB. Such a construction can be used only when you test the script, but in final version, instead of </i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><i>select&nbsp;*</i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i>, you should always indicate exact names of table's fields which you want to be returned.
<br>
</i>
<br>
The rest of the code must be clear now: </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>if</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> checks whether the form field </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>day</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> (i.e. </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>$form:day</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">-the day user selected from calendar generated by function </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>calendar</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">) is defined (</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>def</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">). We do it to figure out whether the user has already chosen a day from calendar or has just come to news section following a link in navigation menu on some other page. If </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>$form:day</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> is defined we just make it the value of variable </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>day</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">. Otherwise, the value of variable </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>day</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> will be today. Then we connect to DB the same way we did when adding new records, create table </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>news</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and fill it with the news related to requested day (SQL-query result). After that, we use method </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>menu</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> to go through the table row by row and output the news by referring to the content of its fields. Everything is now clear except one additional operator used for a specific way of outputting the text of the news:
<br>

<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^untaint{$news.body}</b></span><span style="font-family:Monospace; font-size:12pt; color:#000000"><b>
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i>
<br>
</i><i>Here, you would better put aside the lesson for awhile and read the section on operators </i></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><i><a href=opuntainttaint.htm>taint and untaint </a></i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"><i>to study the work of these operators closely. These are very important operators and you will most probably need to use them quite often. Besides, a great deal of data processing is handled by Parser itself, behind the curtain. This work isn't seen, but it's important that you understand its logic.
<br>
</i>
<br>
Have you read it? Let's go further, then. Why do we need </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><a href=opuntainttaint.htm>untaint</a></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> here? We have a form to manage news records and we want to allow using HTML tags in our articles. It is prohibited by default, because some malicious user can put some JavaScript on your page (which could, for example, redirect user's browser to some other page). How will we do it? We will just mark this text as trustworthy by using operator </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b><a href=opuntainttaint.htm>untaint</a></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>^untaint{</b><b>text&nbsp;of&nbsp;news&nbsp;article</b><b>}
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
In our case, as we don't specify the <b>first</b> parameter, the text will be untainted [as-is] (by default). That means the data will be output as it is in DB.
<br>

<br>
At last we can relax a little: news section is now complete. We can add news and retrieve news related to the date specified by user. Of course, we can improve some little things in our calendar. For example, we can make it leave the days-to-come without links (since we can view only the news for past and present, not for the future), to indicate chosen date in page header, or provide the opportunity to retrieve news of past months (presently, we have only the current month available). This, however, you can do by yourself. The knowledge you got in the previous lessons is quite enough to put these and other ideas, which you may have, into practice. Use your creativity!
<br>

<br>
Let's sum it up,
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000">
<br>
</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>What have we done?</b></span><span style="font-family:Arial; font-size:11pt; color:#000000"><b><i>
<br>
</i></b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">We have built administration section to add news articles, enhanced the function responsible for making up a calendar for the current month, filled news section with data retrieved from DB either based on user's date selection or the current date.</span><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000">
<br>

<br>
</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>What have we learnt?
<br>
</b><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="12"><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"></span></span><span style="font-family:Symbol; font-size:10pt; color:#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></span></td><td><span style="font-family:Symbol; font-size:10pt; color:#000000"></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">the way Parser interacts with MySQL DBMS;
&nbsp;<br>
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="12"><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"></span><span style="font-family:Symbol; font-size:10pt; color:#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></span></td><td><span style="font-family:Symbol; font-size:10pt; color:#000000"></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">two different ways of sending SQL queries (static method </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>sql</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> of class </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>void</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> and constructor </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>sql</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> of class </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>table</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">);
&nbsp;<br>
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="12"><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"></span><span style="font-family:Symbol; font-size:10pt; color:#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></span></td><td><span style="font-family:Symbol; font-size:10pt; color:#000000"></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">operator </span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>untaint</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">.</span><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000">
&nbsp;<br>
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000">
&nbsp;<br>
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000"></span></td><td></td></tr></table><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000"></span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>What should we remember?
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">To work with DB in Parser is easy and clear, all you need to know is the constructions used by DBMS itself. Don't deprive yourself of using databases in your work.</span><span style="font-family:FreeSetC,Arial; font-size:11pt; color:#000000">
<br>

<br>
</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>What's next?
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">Now, as the news section is complete, we are going to make a guestbook to keep track of our site's rating and see whether the site needs certain enhancements.
<br>
</span></span><br>

<!--(later)#include virtual="/docs/comment.html" -->


<hr size=1>
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr valign="top">
<td><font size="1">Copyright &copy; 1997&#150;2011 Art. Lebedev Studio | <a href="http://www.artlebedev.com/" target="_blank">http://www.artlebedev.com</a></font></td>
<td align="right"><font size="1">Last updated: 21.09.2007</font></td>
</tr>
</table>
</body>
</html>
