<html>
<head>
    
    
    <title>parse. Преобразование JSON-строки в хеш</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span style="font-family:Arial; font-size:12pt; color:#000000"><b>parse. Преобразование JSON-строки в хеш
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>^json:parse[JSON-строка;опции преобразования]
<br />
</b><b>
<br />
</b><span>Метод преобразует JSON-строку в хеш.
<br />

<br />
</span><span class="mono"><b>Опции</b></span><span> </span><span class="mono"><b>преобразования&nbsp;</b></span><span>- хеш, в котором можно указать:
<br />
</span><span><table border="0" cellpadding="1"><tr><td align="left" valign="top" width="188">
<span style="font-family:MS Sans Serif; font-size:8pt; color:#000000">
<br />
</span></td><td align="left" valign="top" width="108">
<span><b>По-умолчанию</b>
<br />
</span></td><td align="left" valign="top" width="467">
<span><b>Описание</b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="188">
<span class="mono"><b>$.depth(</b><span>число</span><span class="mono"><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>19
<br />
</span></td><td align="left" valign="top" width="467">
<span>Максимальная глубина вложенности.
<br />
</span></td></tr><tr><td align="left" valign="top" width="188">
<span class="mono"><b>$.double(</b><span><a href="boolclass.htm">true|false</a></span><span class="mono"><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>true
<br />
</span></td><td align="left" valign="top" width="467">
<span>Преобразовывать числа в объекты класса <a href="intdoubleclasses.htm">double</a>. Если указано значение false, то числовые значения будут оставаться в виде строк.
<br />
</span></td></tr><tr><td align="left" valign="top" width="188">
<span class="mono"><b>$.distinct[</b><span>first|last|all</span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>не определён<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Способ обработки дублирующих ключей:<b>
<br />
</b><span class="mono"><b>first</b></span><span>&nbsp;&nbsp;&nbsp;</span><span>- будет оставлен первый встретившийся элемент;</span><span class="mono"><b>
<br />
last</b></span><span>&nbsp;&nbsp;&nbsp;-</span><span> будет оставлен последний встретившийся элемент;</span><span class="mono"><b>
<br />
all</b></span><span>&nbsp;&nbsp;&nbsp;- в результат попадут все элементы, при этом элементы, начиная со второго, получат суффиксы _2, _3 и т.д.
<br />
</span><span class="mono"><b>по&nbsp;умолчанию</b></span><span> - в случае обнаружения дублирующихся ключей будет выдано исключение (exception)</span><span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="188">
<span class="mono"><b>$.object[</b><span><a href="junctionclass.htm">ссылка на метод</a></span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>не определён<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Опция позволяет указать пользовательский метод с двумя параметрами, который будет вызываться для всех элементов. Возвращаемый методом объект (в том числе пользовательского типа) и будет помещаться в в результирующую структуру.<span class="mono">
<br />
</span></span></td></tr></table>
<br />

<br />
</span><span class="h1"><b>Пример</b></span><span>
<br />
</span><span class="mono"><span class="monoblue"><b>@main[]
<br />
$json_string[</b></span></span><span class="mono"><b>{
<br />
&nbsp;&nbsp;&nbsp;"a1":{"b":&nbsp;1,&nbsp;"c":&nbsp;"xyz"</b><b>,&nbsp;"d":&nbsp;"zzz"</b><b>}
<br />
&nbsp;&nbsp;&nbsp;"a2":{</b><b>"b":&nbsp;1,&nbsp;"b":&nbsp;2,&nbsp;"b":&nbsp;3</b><b>}
<br />
}</b><span class="monoblue"><b>]
<br />

<br />
$h[^json:parse[$json_string;
<br />
&nbsp;&nbsp;&nbsp;$.double(false)</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>&nbsp;&nbsp;&nbsp;$.</b></span></span><span class="mono"><span class="monoblue"><b>distinct</b></span></span><span class="mono"><span class="monoblue"><b>[all]</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
&nbsp;&nbsp;&nbsp;$.object[$handler]
<br />
]]
<br />

<br />
@handler[key;value]
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>$result[^if($keq&nbsp;eq&nbsp;"d"){=^key.length[]=}{$value}]</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span>В результате разбора указанной JSON-строки хеш будет содержать:
<br />
</span><span class="mono"><b>$h[
<br />
&nbsp;&nbsp;&nbsp;$.a1[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b[1]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.c[xyz]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.d[=3=]
<br />
&nbsp;&nbsp;&nbsp;]
<br />
&nbsp;&nbsp;&nbsp;$.a2[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b[1]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b_2[2]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b_3[3]
<br />
&nbsp;&nbsp;&nbsp;]
<br />
]</b><span class="monoblue"><b>
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span></span><br />




</body>
</html>