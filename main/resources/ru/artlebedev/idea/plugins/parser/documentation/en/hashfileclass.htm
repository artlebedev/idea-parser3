<html>
<head>
    
    
    <title>Hashfile class</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Hashfile class
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span>The class is designed for working with hashes kept on disk. Unlike <span class="mono"><b><a href="hashclass.htm">hash</a></b></span><span> class, objects of this class are considered to be always defined (</span><span class="mono"><b>def</b></span><span>) and have no numeric value.
<br />

<br />
While </span><span class="mono"><b>hash</b></span><span> class keeps its values in memory, </span><span class="mono"><b>hashfile</b></span><span> keeps them on disk and it is possible to separately specify time to keep each key-value pair.
<br />
<i>Note: currently to keep one </i></span><span class="mono"><b>hashfile</b></span><span><i> </i><i>two files are used</i><i>: .dir </i><i>and</i><i> .pag.</i><i>
<br />
Note: there is a limit on key and value strings, together they must not exceed </i><i>8000 b</i><i>ytes</i><i>.
<br />
</i>
<br />
<a href="hashfileread.htm">Reading</a> and <a href="hashfilewrite.htm">writing</a> of data performed very quickly-Parser works only with necessary data files fragments.
<br />
On simple tasks </span><span class="mono"><b>hashfile</b></span><span> performs considerably faster then databases.
<br />
<i>Note</i><i>: f</i><i>ile can be changed only by one script at a time</i><i>, others are waiting for it to complete</i><i> processing of request</i><i>.</i><i>
<br />
</i>
<br />
</span><span class="h1"><b>Example</b></span><span>
<br />
Say, it's desirable to get some information from visitor on one page of site and to be able to show it on other page.  And it is necessary to prevent visitor from seeing or faking it in the middle.
<br />

<br />
It is possible to store information to </span><span class="mono"><b>hashfile</b></span><span>, associated with some random string-session identifier. That identifier can be stored to </span><span class="mono"><b><a href="cookieclass.htm">cookie</a></b></span><span>, data are now kept on server, are not reachable and cannot be faked by visitor.
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>#&nbsp;opening/creating&nbsp;file&nbsp;with&nbsp;information
<br />
$sessions[^hashfile::</b></span></span><span class="mono"><span class="monoblue"><b><a href="hashfileopen.htm">open</a></b></span></span><span class="mono"><span class="monoblue"><b>[/sessions]]
<br />
^if(!def&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b><a href="cookiestats.htm">$cookie:sid</a></b></span></span><span class="mono"><span class="monoblue"><b>){
<br />
&nbsp;&nbsp;&nbsp;&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b><a href="cookierec.htm">$cookie:sid</a></b></span></span><span class="mono"><span class="monoblue"><b>[^</b></span></span><span class="mono"><span class="monoblue"><b><a href="mathclass.htm">math</a></b></span></span><span class="mono"><span class="monoblue"><b>:</b></span></span><span class="mono"><span class="monoblue"><b><a href="mathuuid.htm">uuid</a></b></span></span><span class="mono"><span class="monoblue"><b>[]]
<br />
}
<br />
#&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b>after&nbsp;that</b></span></span><span class="mono"><span class="monoblue"><b>&#133;
<br />

<br />
$information_string[</b></span></span><span class="mono"><b>arbitrary&nbsp;value</b><span class="monoblue"><b>]
<br />
#&nbsp;&#133;storing&nbsp;arbitrary&nbsp;$information_string&nbsp;under&nbsp;sid&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b>key&nbsp;for&nbsp;2&nbsp;days</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
$sid[$cookie:sid]
<br />
$sessions.$sid[</b></span></span><span class="mono"><span class="monoblue"><b><a href="hashfilewrite.htm">$.value[$information_string] $.expires(2)</a></b></span></span><span class="mono"><span class="monoblue"><b>]
<br />

<br />
#&nbsp;&#133;</b></span></span><span class="mono"><span class="monoblue"><b>like&nbsp;this&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b>can&nbsp;read&nbsp;the&nbsp;value&nbsp;stored&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b>earlier</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
#&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b>if&nbsp;since&nbsp;the&nbsp;moment&nbsp;we&nbsp;stored&nbsp;it&nbsp;passed&nbsp;less&nbsp;then&nbsp;2&nbsp;days</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
$sid[$cookie:sid]
<br />
$information_string[</b></span></span><span class="mono"><span class="monoblue"><b><a href="hashfileread.htm">$sessions.</a></b></span></span><span class="mono"><span class="monoblue"><b>$sid]
<br />
</b></span></span></span><br />




</body>
</html>