<html>
<head>
    
    
    <title>Свойства</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Свойства</b><b>&nbsp;&nbsp;&nbsp;</b><span><b><i>[3.2.0]</i></b></span><span class="h1"><b>
<br />
</b></span></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>@GET_имя[]
<br />
код,&nbsp;выдает&nbsp;значение
<br />

<br />
@SET_имя[value]
<br />
код,&nbsp;обрабатывает&nbsp;новое&nbsp;$value
<br />
</b><span>
<br />
</span><span class="mono"><b>@GET_DEFAULT[]</b><b>&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.3.0]</i></b></span><span class="mono"><b>
<br />
@GET_DEFAULT[имя]</b><b>&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.3.0]</i></b></span><span class="mono"><b>
<br />
код,&nbsp;обрабатывающий&nbsp;обращения&nbsp;к&nbsp;несуществующим&nbsp;полям</b><b>
<br />

<br />
</b><b>@</b><b>SET</b><b>_DEFAULT[имя</b><b>;</b><b>значение]</b><b>&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.4.1]</i></b></span><span class="mono"><b>
<br />
код,&nbsp;обрабатывающий&nbsp;запись&nbsp;в&nbsp;несуществующие&nbsp;поля</b><b>
<br />

<br />
@GET[]</b><b>&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.3.0]</i></b></span><span class="mono"><b>
<br />
@GET[</b><b>тип&nbsp;обращения</b><b>]</b></span><span><b><i> [3.4.0]</i></b></span><span class="mono"><b>
<br />
код,&nbsp;</b><b>обрабатывающий&nbsp;обращения&nbsp;к&nbsp;объекту/классу&nbsp;в&nbsp;определённых&nbsp;контекстах&nbsp;вызова
<br />
</b></span><span>
<br />

<br />
Можно определить default getter (</span><span class="mono"><b>@GET_DEFAULT[]</b></span><span>) - метод, который будет вызываться при обращении к несуществующим полям. Имя поля, к которому пытались обратиться, передаётся единственным параметром этому методу.
<br />
<i>Важно: с этим методом нельзя работать как с обычным «</i><b><i>свойством</i></b><i>», при попытке написать </i><i>$DEFAULT</i><i> будет выдано сообщение об ошибке</i><i>.</i>
<br />

<br />
Также можно определить default setter (</span><span class="mono"><b>@SET_DEFAULT[name;value]</b></span><span>) - метод, который будет вызываться при попытках записи в несуществующие поля. Имя поля, к которому пытались обратиться и записываемое значение будут переданы этому методу.
<br />

<br />
У пользовательских классов можно определить специальное свойство </span><span class="mono"><b>@GET[]</b></span><span>, которое будет вызываться при обращении к классу/объекту этого класса в определённых контекстах вызова, например: в скалярном контексте, в выражении и т.п. Если у этого свойства определён параметр, то через него будет передан </span><span class="mono"><b>тип&nbsp;обращения</b></span><span>, который может принимать одно из следующих значений</span><span>: </span><span class="mono"><b>def</b></span><span>, </span><span class="mono"><b>expression</b></span><span>, </span><span class="mono"><b>bool</b></span><span>, </span><span class="mono"><b>double</b></span><span>, </span><span class="mono"><b>hash</b></span><span>, </span><span class="mono"><b>table</b></span><span> или </span><span class="mono"><b>file</b></span><span>.
<br />

<br />
<i>Примечание</i><i>: </i><i>при обычном присваивании вида </i><i>$a[$b] </i><i>метод </i><i>@GET[] </i><i>не вызывается.</i>
<br />

<br />
Так названные <a href="definemethod.htm">методы</a> задают «<b>свойство</b>», которым можно пользоваться, как обычной <a href="vars.htm">переменной</a>:
<br />
<table border="1" cellpadding="1"><tr><td align="left" valign="top" width="179">
<span><i>пишем
<br />
</i></span></td><td align="left" valign="top" width="195">
<span><i>происходит
<br />
</i></span></td></tr><tr><td align="left" valign="top" width="179">
<span class="mono"><b>$имя</b><span>
<br />
</span></span></td><td align="left" valign="top" width="195">
<span class="mono"><b>^GET_имя[]</b><span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="179">
<span class="mono"><b>$имя</b><b>[</b><b>значение</b><b>]</b><span>
<br />
</span></span></td><td align="left" valign="top" width="195">
<span class="mono"><b>^SET_имя</b><b><a href="params.htm">[значение]</a></b><span>
<br />
</span></span></td></tr></table>
<br />
<i>Примечание: если не требуется возможность записи или чтения свойства, соответствующий метод можно не определять.
<br />
Важно: нельзя иметь и свойство и переменную с одним именем.
<br />
</i>
<br />

<br />
</span><span class="h1"><b>Пример: возраст и e-mail
<br />
</b></span><span>Возьмем человека - хранить удобно дату рождения, а выводить частенько нужно возраст. Нужен e-mail, но можно позабыть проверить его на корректность.
<br />

<br />
Пусть людьми занимается <a href="defineclass.htm">класс</a>, его свойства «возраст» и «e-mail» позволят спрятать ненужные детали, сделав код проще и нагляднее:
<br />
</span><span class="mono"><span class="monoblue"><b><a href="opuse.htm">@USE</a></b></span></span><span class="mono"><span class="monoblue"><b>
<br />
/person.p
<br />

<br />
</b></span></span><span class="mono"><span class="monoblue"><b><a href="mainclass.htm">@main[]</a></b></span></span><span class="mono"><span class="monoblue"><b>
<br />
$person[^person::create[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$.name[</b></span></span><span class="mono"><b>Василий&nbsp;Пупкин</b><span class="monoblue"><b>]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$.birthday[^</b></span></span><span class="mono"><span class="monoblue"><b><a href="dateclass.htm">date</a></b></span></span><span class="mono"><span class="monoblue"><b>::</b></span></span><span class="mono"><span class="monoblue"><b><a href="datecreateabs.htm">create</a></b></span></span><span class="mono"><span class="monoblue"><b>(2000;8;5)]
<br />
]]
<br />
#&nbsp;можно&nbsp;менять,&nbsp;но&nbsp;значение&nbsp;проверят
<br />
$person.email[</b></span></span><span class="mono"><b>vasya@pupkin.ru</b><span class="monoblue"><b>]
<br />
$person.name</b></span></span><span class="mono"><b>&nbsp;(</b><span class="monoblue"><b>$person.email</b></span></span><span class="mono"><b>),&nbsp;возраст:&nbsp;</b><span class="monoblue"><b>$person.age</b></span></span><span class="mono"><b>&lt;br&nbsp;/&gt;</b><span class="monoblue"><b>
<br />
</b></span></span><span>
<br />
Выведет:
<br />
</span><span class="mono"><b>Василий&nbsp;Пупкин&nbsp;(vasya@pupkin.ru),&nbsp;возраст:&nbsp;5&lt;br&nbsp;/&gt;&nbsp;</b></span><span>(с ходом времени возраст будет увеличиваться)
<br />
</span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span>При этом менять возраст человека нельзя:
<br />
</span><span class="mono"><span class="monoblue"><b>#&nbsp;это&nbsp;вызовет&nbsp;ошибку!
<br />
$person.age(</b></span></span><span class="mono"><b>99</b><span class="monoblue"><b>)
<br />

<br />
</b></span></span><span>Также нельзя присваивать свойству </span><span class="mono"><b>email</b></span><span> некорректные значения:</span><span class="mono"><span class="monoblue"><b>
<br />
#&nbsp;это&nbsp;вызовет&nbsp;ошибку!
<br />
$person.email[</b></span></span><span class="mono"><b>vasya#pupkin.ru</b><span class="monoblue"><b>]
<br />

<br />
</b></span></span><span class="h1"><b>Определение класса person
<br />
</b></span><span>Чтобы вышеописанный пример сработал, нужно <a href="defineclass.htm">определить</a> класс </span><span class="mono"><b>person</b></span><span> и его свойства.
<br />
В корне веб-пространства в файл </span><span class="mono">person.p</span><span> поместим это:</span><span class="mono"><span class="monoblue"><b>
<br />
@CLASS
<br />
person
<br />

<br />
@create[p]
<br />
$name[$p.name]
<br />
$birthday[$p.birthday]
<br />
</b></span></span><span><i>
<br />
</i></span><span class="mono"><span class="monoblue"><b>#&nbsp;свойство&nbsp;«возраст»
<br />
@GET_age[]</b></span></span><span class="mono"><span class="monoblue"><b><a href="definemethod.htm">[now;today;celebday]</a></b></span></span><span class="mono"><span class="monoblue"><b>
<br />
$now[^date::</b></span></span><span class="mono"><span class="monoblue"><b><a href="datenow.htm">now</a></b></span></span><span class="mono"><span class="monoblue"><b>[]]
<br />
$today[^date::create($now.</b></span></span><span class="mono"><span class="monoblue"><b><a href="datefields.htm">year</a></b></span></span><span class="mono"><span class="monoblue"><b>;$now.month;$now.day)]
<br />
$celebday[^date::create($now.year;$birthday.month;$birthday.day)]
<br />
#&nbsp;числовое&nbsp;значение&nbsp;логического&nbsp;выражения:&nbsp;истина=1;&nbsp;ложь=0
<br />
$</b></span></span><span class="mono"><span class="monoblue"><b><a href="definemethod.htm">result</a></b></span></span><span class="mono"><span class="monoblue"><b>(^if($birthday&gt;$today)(0)($today.year&nbsp;-&nbsp;$birthday.year&nbsp;-&nbsp;($today&lt;$celebday)))
<br />

<br />
#&nbsp;свойство&nbsp;«e-mail»
<br />
@SET_email[value]
<br />
^if(</b></span></span><span class="mono"><span class="monoblue"><b><a href="exprops.htm">!</a></b></span></span><span class="mono"><span class="monoblue"><b>^</b></span></span><span class="mono"><span class="monoblue"><b>Lib:</b></span></span><span class="mono"><span class="monoblue"><b>is</b></span></span><span class="mono"><span class="monoblue"><b>E</b></span></span><span class="mono"><span class="monoblue"><b>mail[$value]){
<br />
&nbsp;&nbsp;&nbsp;&nbsp;^</b></span></span><span class="mono"><span class="monoblue"><b><a href="opthrow.htm">throw</a></b></span></span><span class="mono"><span class="monoblue"><b>[email.invalid;</b></span></span><span class="mono"><b>Некорректный&nbsp;e-mail:&nbsp;'</b><span class="monoblue"><b>$value</b></span></span><span class="mono"><b>'</b><span class="monoblue"><b>]
<br />
}
<br />
#&nbsp;имя&nbsp;переменной&nbsp;не&nbsp;должно&nbsp;совпадать&nbsp;с&nbsp;именем&nbsp;свойства!
<br />
$private_email[$value]
<br />

<br />
@GET_email[]
<br />
$private_email
<br />
</b></span></span><span>
<br />
<i>Примечание: метод </i><b><i>isEmail</i></b></span><span><i>, как</i></span><span><i> и ряд других полезных методов и </i><i><a href="defineclass.htm">операторов</a></i><i> можно скачать по следующему адресу: </i><span class="blue"><i><u><a href="http://www.parser.ru/examples/lib/" target="_blank">http://www.parser.ru/examples/lib/</a></u></i></span></span><span><i>.
<br />
Примечание: классы лучше помещать в отдельное удобное место и при подключении не указывать путь, см. </i></span><span class="mono"><b>$</b><b><a href="app1pathclass.htm">CLASS_PATH</a></b></span><span><i>.
<br />

<br />

<br />
</i></span><span class="h1"><b>Пример: класс, расширяющий функционал системного класса </b><b>table</b><b>
<br />
</b></span><span class="mono"><span class="monoblue"><b>@main[]
<br />
$t[^MyTable::create{a&nbsp;&nbsp;&nbsp;b
<br />
0a&nbsp;&nbsp;&nbsp;0b
<br />
1a&nbsp;&nbsp;&nbsp;1</b></span></span><span class="mono"><span class="monoblue"><b>b</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
2a&nbsp;&nbsp;&nbsp;2b
<br />
3a&nbsp;&nbsp;&nbsp;3b}]
<br />

<br />
</b></span></span><span class="mono"><b>Значение&nbsp;в&nbsp;выражении:&nbsp;</b><span class="monoblue"><b>^eval($t)&lt;br&nbsp;/&gt;
<br />
</b></span></span><span class="mono"><b>^^t.count:&nbsp;</b><span class="monoblue"><b>^t.count[]&lt;br&nbsp;/&gt;
<br />
</b></span></span><span class="mono"><b>Выводим&nbsp;содержимое&nbsp;пользовательского&nbsp;объекта:&nbsp;</b><span class="monoblue"><b>^print[$t]&lt;br&nbsp;/&gt;
<br />

<br />

<br />
&lt;br&nbsp;/&gt;
<br />
</b></span></span><span class="mono"><b>Копируем&nbsp;объект&nbsp;и&nbsp;выводим&nbsp;^^c.count[]:</b><span class="monoblue"><b>
<br />
$c[^MyTable::create[$t]]
<br />
^c.count[]&lt;br&nbsp;/&gt;
<br />
</b></span></span><span class="mono"><b>Удаляем&nbsp;2&nbsp;строки,&nbsp;начиная&nbsp;со&nbsp;строки&nbsp;с&nbsp;offset=1&nbsp;и&nbsp;выводим&nbsp;содержимое&nbsp;пользовательского&nbsp;объекта:</b><span class="monoblue"><b>
<br />
^c.remove(1;2)
<br />
^print[$c]&lt;br&nbsp;/&gt;
<br />

<br />

<br />
&lt;br&nbsp;/&gt;
<br />
</b></span></span><span class="mono"><b>Создаём&nbsp;объект&nbsp;системного&nbsp;класса&nbsp;</b><b>table</b><b>&nbsp;на&nbsp;основании&nbsp;объекта&nbsp;класса&nbsp;MyTable&nbsp;и&nbsp;выводим&nbsp;^^z.count[]:</b><span class="monoblue"><b>
<br />
$z[^table::create[$t]]
<br />
^z.count[]&lt;br&nbsp;/&gt;
<br />

<br />

<br />
@print[t]
<br />
^t.menu{$t.a=$t.b}[&lt;br&nbsp;/&gt;]
<br />
</b></span></span><span class="h1"><b>
<br />

<br />
</b><b>Определение класса </b><b>MyTable
<br />
</b></span><span class="mono"><span class="monoblue"><b>@CLASS
<br />
MyTable
<br />

<br />
@create[uParam]
<br />
^switch[$uParam.CLASS_NAME]{
<br />
&nbsp;&nbsp;&nbsp;^case[string]{$t[^table::create{$uParam}]}
<br />
&nbsp;&nbsp;&nbsp;^case[table;MyTable]{$t[^table::create[$uParam]]}
<br />
&nbsp;&nbsp;&nbsp;^case[DEFAULT]{^throw[MyTable;</b></span></span><span class="mono"><b>Unsupported&nbsp;type&nbsp;</b><span class="monoblue"><b>$uParam.CLASS_NAME]}
<br />
}
<br />

<br />
#&nbsp;метод&nbsp;возвращающий&nbsp;значение&nbsp;объекта&nbsp;в&nbsp;разных&nbsp;контекстах&nbsp;вызова
<br />
@GET[</b></span></span><span class="mono"><span class="monoblue"><b>sMode</b></span></span><span class="mono"><span class="monoblue"><b>]</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
^switch[$sMode]{
<br />
&nbsp;&nbsp;&nbsp;^case[table]{$result[$t]}
<br />
&nbsp;&nbsp;&nbsp;^case[bool]{$result($t!=0)}
<br />
&nbsp;&nbsp;&nbsp;^case[def]{$result(true)}
<br />
&nbsp;&nbsp;&nbsp;^case[expression;double]{$result($t)}
<br />
&nbsp;&nbsp;&nbsp;^case[DEFAULT]{^throw[MyTable;Unsupported&nbsp;mode&nbsp;'$sMode']}
<br />
}</b></span></span><span class="mono"><span class="monoblue"><b>
<br />

<br />

<br />
#&nbsp;метод&nbsp;обрабатывает&nbsp;обращения&nbsp;к&nbsp;"столбцам"
<br />
@GET_DEFAULT[sName]
<br />
$result[$t.$sName]
<br />

<br />

<br />
#&nbsp;для&nbsp;всех&nbsp;существующих&nbsp;методов&nbsp;нужно&nbsp;написать&nbsp;wrapper-ы
<br />
@count[]
<br />
^t.count[]
<br />

<br />
@menu[jCode;sSeparator]
<br />
^t.menu{$jCode}[$sSeparator]
<br />

<br />

<br />
#&nbsp;добавляем&nbsp;новый&nbsp;функционал
<br />
@remove[iOffset;iLimit]
<br />
$iLimit(^iLimit.int(0))
<br />
$t[^t.select(^t.offset[]&lt;$iOffset&nbsp;||&nbsp;^t.offset[]&gt;=$iOffset+$iLimit)]
<br />
</b></span></span><span><i>
<br />
</i></span></span><br />




</body>
</html>