<html>
<head>
    
    
    <title>parse. Parsing JSON string into hash</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>parse. Parsing JSON string into hash</b><b>
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>^json:parse[JSON-string;</b><b>parsing </b><b>options]
<br />
</b><b>
<br />
</b><span>Method transforms JSON-string into a hash.</span><span>
<br />

<br />
</span><span class="mono"><b>Parsing&nbsp;options</b></span><span>-<a href="hash.htm">hash</a> with parsing options.
<br />
</span><span><table border="0" cellpadding="1"><tr><td align="left" valign="top" width="288">
<span style="font-family:MS Sans Serif; font-size:8pt; color:#000000">
<br />
</span></td><td align="left" valign="top" width="108">
<span><b><i>Default</i></b>
<br />
</span></td><td align="left" valign="top" width="462">
<span><b><i>Value</i></b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.depth(</b><span>number</span><span class="mono"><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>19
<br />
</span></td><td align="left" valign="top" width="462">
<span>Maximum depth
<br />
</span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.double(</b><span><a href="boolclass.htm">true|false</a></span><span class="mono"><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>true
<br />
</span></td><td align="left" valign="top" width="462">
<span class="mono"><b>true</b><span>&nbsp;&nbsp;&nbsp;- Stores numbers as objects of class <a href="intdoubleclasses.htm">double</a>. 
<br />
</span><span class="mono"><b>false</b></span><span>&nbsp;&nbsp;&nbsp;- Stores numbers as strings.
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.distinct[</b><span>first|last|all</span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>not defined<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="462">
<span>The way of processing elements with identical names:
<br />
<span class="mono"><b>first</b></span><span>&nbsp;&nbsp;&nbsp;- Only the first element will be stored in output.
<br />
</span><span class="mono"><b>last</b></span><span>&nbsp;&nbsp;&nbsp;- Only the last element will be stored in output.
<br />
</span><span class="mono"><b>all</b></span><span>&nbsp;&nbsp;&nbsp;- All elements will be stored in output. Elements starting from the second will have suffixes _2, _3, etc.
<br />
</span><span class="mono"><b>default&nbsp;</b></span><span>- elements with identical names are considered error (exception).</span><span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.object[</b><span><a href="junctionclass.htm">method name</a></span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="108">
<span>not defined<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="462">
<span>If defined the specified method will be called for every parsing element. The result of the method will be passed to output. The method must accept two parameters - name and value.<span class="mono">
<br />
</span></span></td></tr></table>
<br />

<br />
</span><span class="h1"><b>Example</b></span><span>
<br />
</span><span class="mono"><span class="monoblue"><b>@main[]
<br />
$json_string[</b></span></span><span class="mono"><b>{
<br />
&nbsp;&nbsp;&nbsp;"a1":{"b":&nbsp;1,&nbsp;"c":&nbsp;"xyz",&nbsp;"d":&nbsp;"zzz"}
<br />
&nbsp;&nbsp;&nbsp;"a2":{</b><b>"b":&nbsp;1,&nbsp;"b":&nbsp;2,&nbsp;"b":&nbsp;3</b><b>}
<br />
}</b><span class="monoblue"><b>]
<br />

<br />
$h[^json:parse[$json_string;
<br />
&nbsp;&nbsp;&nbsp;$.double(false)</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>&nbsp;&nbsp;&nbsp;$.distinct[all]
<br />
&nbsp;&nbsp;&nbsp;$.object[$handler]
<br />
]]
<br />

<br />
@handler[key;value]
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>$result[^if($keq&nbsp;eq&nbsp;"d"){=^value.length[]=}{$value}]</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span>
<br />
The specified JSON-string will be transformed into the following hash:</span><span>
<br />
</span><span class="mono"><b>$h[
<br />
&nbsp;&nbsp;&nbsp;$.a1[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b[1]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.c[xyz]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.d[=3=]
<br />
&nbsp;&nbsp;&nbsp;]
<br />
&nbsp;&nbsp;&nbsp;$.a2[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b[1]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b_2[2]
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.b_3[3]
<br />
&nbsp;&nbsp;&nbsp;]
<br />
]</b><span class="monoblue"><b>
<br />

<br />
</b></span></span><span>
<br />
</span></span><br />




</body>
</html>