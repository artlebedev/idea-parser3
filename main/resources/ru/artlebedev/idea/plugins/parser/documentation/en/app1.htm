<html>
<head>
    
    
    <title>Appendix 1. Paths to files and directories, working with HTTP-servers</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Appendix 1. Paths to files and directories, working with HTTP-servers
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span>To access files and directories in Parser, one may use absolute or relative paths.
<br />

<br />
Absolute path is started with slash. In this case, the file is searched for from web-space root. If a relative path is used, the file will be searched for from directory where requested document is located.
<br />

<br />
Example of absolute path:
<br />
<span class="mono">/news/archive/20020127/sport.html
<br />
</span><span>
<br />
Example of relative path:
<br />
relative to directory </span><span class="mono">/news/archive</span><span>&#133;
<br />
</span><span class="mono">20020127/sport.html</span><span>
<br />

<br />
While a file is saved, needed directories are created automatically.
<br />

<br />
<i>Note: the root of web-space, passed by web-server, can be cahnged: see </i><i>"</i><i><a href="requestdocroot.htm">Root of web-space</a></i><i>"</i><i>
<br />
</i>
<br />
<i>Note: Parser transforms paths to </i></span><span class="mono"><b><i><a href="opuntainttaint.htm">file-spec</a></i></b></span><span><i> (</i><i>see </i><i>"</i><i><a href="tainting.htm">External and internal data</a></i><i>").
<br />

<br />

<br />
</i>Methods&#133;
<br />
<table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><span></span></span><span class="mono"><b></b><font face="Symbol" size="2" color="#000000">&#183;</font><b></b></span></td><td><span class="mono"><b><a href="fileload.htm">file::load</a></b><b>
&nbsp;<br />
</b></span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><span class="mono"><b></b><b></b><font face="Symbol" size="2" color="#000000">&#183;</font><b></b></span></td><td><span class="mono"><b><a href="tableload.htm">table::load</a></b><b>
&nbsp;<br />
</b></span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td><span class="mono"><b></b></span></td><td></td></tr></table><span class="mono"></span><span>
<br />
&#133;can work with external HTTP-servers, provided the name of document to be loaded starts with prefix </span><span class="mono">http://</span><span>
<br />

<br />
While using these methods, one can also specify extra options to control download behavior. These options are <a href="hash.htm">hash</a>, with such keys as:</span><span class="h1">
<br />
</span><span>
<br />
</span><span class="mono"><table border="0" cellpadding="1"><tr><td align="left" valign="top" width="230">
<span><b><i>Option</i></b><b>
<br />
</b></span></td><td align="left" valign="top" width="206">
<span><b><i>Default</i></b><b>
<br />
</b></span></td><td align="left" valign="top" width="284">
<span><b><i>Value</i></b><span style="font-family:MS Sans Serif; font-size:8pt; color:#000000">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.charset[</b><span>charset</span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>taken from HTTP response header
<br />
</span></td><td align="left" valign="top" width="284">
<span>Charset used in documents on remote server. This charset is used to transcode request string and response body.
<br />

<br />
This option also allowed while loading local text files. <b><i>[3.2.2]
<br />
</i></b><span>
<br />
If a text file which is loaded without charset option, contains BOM code it will be transcoded automatically from UTF-8 to $request:charset.</span><span> <b><i>[3.4.1]</i></b>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.timeout(</b><span>seconds</span><span class="mono"><b>)</b>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>2 seconds<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="284">
<span>HTTP server's response timeout in seconds. If download operation is not finished within this period, <a href="parserexceptions.htm">exception</a> will be thrown.<span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.method[</b><span>HTTP-METHOD</span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>GET<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="284">
<span>The name of HTTP-method should be specified in uppercase only.
<br />

<br />
It's possible to specify it in lowercase as well.<span><b><i> [3.3.1]</i></b></span><span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.enctype[</b><span>CONTENT-TYPE</span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>application/x-www-form-urlencoded<span>
<br />
</span></span></td><td align="left" valign="top" width="284">
<span>Possible values are:
<br />
application/x-www-form-urlencoded
<br />
or multipart/form-data.
<br />
Last one with method <span class="mono">POST</span><span> should be used if you need to send files to external HTTP server.</span><span><b><i> [3.3.1]</i></b>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.form[</b><b>
<br />
&nbsp;&nbsp;</b><b>$.field[</b><span>string</span><span class="mono"><b>]</b><b>
<br />
&nbsp;&nbsp;</b><b>$.field[</b></span><span>file</span><span class="mono"><b>]</b><b>
<br />
&nbsp;&nbsp;</b><b>$.field[</b></span><span>$table</span><span class="mono"><b>]</b><b>
<br />
&nbsp;&nbsp;&#133;</b><b>
<br />
]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>none
<br />
</span></td><td align="left" valign="top" width="284">
<span>Request parameters. For <span class="mono">GET</span><span>-request they will be passed in</span><span class="mono">?query_string</span><span>. For requests with other </span><span class="mono"><b>method</b></span><span>, parameters will be passed with
<br />
</span><span class="mono">Content-type:&nbsp;application/x-www-form-urlencoded</span><span>
<br />
Parameter value can be string, table with one column or file<b><i> [3.3.1]</i></b>.
<br />
<b><i>
<br />
</i></b><i>It is preferable to pass parameters by means of </i></span><span class="mono"><b>$.forms</b></span><span><i>, and not pass it in</i></span><span class="mono">?parameters</span><span><i> b</i><i>y hand</i><i>.</i><i>
<br />

<br />
It is allowed to pass parameters in both styles simultaneously</i>. <b><i>[3.1.5]</i></b>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.body[</b><span>string</span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>none
<br />
</span></td><td align="left" valign="top" width="284">
<span>Text body of the query. (do not use <span class="mono"><b>form</b></span><span> or </span><span class="mono"><b>METHOD[</b></span><span>GET</span><span class="mono"><b>]</b></span><span> when you use </span><span class="mono"><b>body</b></span><span>)
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.cookies[</b><b>
<br />
&nbsp;&nbsp;</b><b>$.name[</b><span>value</span><span class="mono"><b>]</b><b>
<br />
&nbsp;&nbsp;&#133;</b><b>
<br />
]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>none
<br />
</span></td><td align="left" valign="top" width="284">
<span><a href="hashclass.htm">Hash</a> with list of cookies to be passed to HTTP-server. <b><i>[3.2.3]</i></b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.headers[
<br />
</b><b>&nbsp;&nbsp;</b><b>$.HTTP-HEADER[</b><span>value</span><span class="mono"><b>]
<br />
</b><b>&nbsp;&nbsp;</b><b>&#133;
<br />
]</b>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span class="mono">$.User-Agent[parser3]
<br />
</span></td><td align="left" valign="top" width="284">
<span><a href="hashclass.htm">Hash</a> with additional HTTP-headers to be passed to HTTP-server
<br />

<br />
HTTP-header's value may be a <a href="dateclass.htm">date</a>, <a href="stringclass.htm">string</a> or <a href="hashclass.htm">hash</a> with obligatory key <span class="mono"><b>value</b></span><span>.
<br />
Date may be used as either field value or field's attribute value. In this case, it will be object to standard formatting.</span><span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.any-status(</b><b><a href="boollit.htm">true</a></b><b>)</b>
<br />
</span></td><td align="left" valign="top" width="206">
<span>false/0<span class="mono"><b>
<br />
</b></span></span></td><td align="left" valign="top" width="284">
<span>Boolean: is response status not equal to 200 allowed? If Boolean is FALSE, and received status is not equal to 200, system exception <span class="mono"><b><a href="parserexceptions.htm">http.status</a></b></span><span><b> </b>will be thrown.</span><span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.omit-post-charset(</b><b><a href="boollit.htm">true</a></b><b>)</b><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>false/0
<br />
</span></td><td align="left" valign="top" width="284">
<span>Don't add charset info to HTTP-header content-type for outgoing POST request. <b><i>[3.3.0]</i></b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.user[</b><span>user</span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>none
<br />
</span></td><td align="left" valign="top" width="284">
<span>These are request parameters to server,
<br />
</span></td></tr><tr><td align="left" valign="top" width="230">
<span class="mono"><b>$.password[</b><span>password</span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>none
<br />
</span></td><td align="left" valign="top" width="284">
<span>which uses standard HTTP-authorization.
<br />
</span></td></tr></table>
<br />

<br />
</span><span>For </span><span class="mono">^<b><a href="fileload.htm">file::load</a></b><b>[&#133;]</b></span><span> one can also specify additional loading options. These options are <a href="hash.htm">hash</a> with such keys as:
<br />

<br />
</span><span class="mono"><table border="0" cellpadding="1"><tr><td align="left" valign="top" width="197">
<span><b><i>Option</i></b><b>
<br />
</b></span></td><td align="left" valign="top" width="175">
<span><b><i>Default</i></b><b>
<br />
</b></span></td><td align="left" valign="top" width="242">
<span><b><i>Value</i></b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="197">
<span class="mono"><b>$.offset(</b><span>offset</span><span class="mono"><b>)</b>
<br />
</span></span></td><td align="left" valign="top" width="175">
<span>0<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="242">
<span>While loading data, offset is specified in number of bytes.<span style="font-family:MS Sans Serif; font-size:8pt; color:#000000">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="197">
<span class="mono"><b>$.limit(</b><span>limit</span><span class="mono"><b>)</b>
<br />
</span></span></td><td align="left" valign="top" width="175">
<span>-1<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="242">
<span>Load no more than specified number of bytes<span class="mono">
<br />
</span></span></td></tr></table>
<br />
</span></span><br />




</body>
</html>