<html>
<head>
    
    
    <title>Поля</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Поля
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="h1"><b>name. Имя файла
<br />
</b><span class="mono"><span class="monoblue"><b>$файл.name</b></span></span><span><b>&nbsp;&nbsp;&nbsp;
<br />
</b></span><span>
<br />
Поле содержит имя файла. Объект класса </span><span class="mono"><b>file</b></span><span> имеет поле </span><span class="mono"><b>name</b></span><span>, если пользователь закачал файл через поле формы. Также в конструкторе </span><span class="mono"><b>file::load</b></span><span> может быть указано альтернативное имя файла.
<br />

<br />
</span><span class="h1"><b>size. Размер файла
<br />
</b></span><span class="mono"><span class="monoblue"><b>$файл.size</b></span></span><span><b>&nbsp;&nbsp;&nbsp;
<br />
</b></span><span>
<br />
Поле содержит размер файла в байтах.
<br />

<br />
</span><span class="h1"><b>text. Текст файла
<br />
</b></span><span class="mono"><span class="monoblue"><b>$файл.text</b></span></span><span><b>
<br />
</b></span><span>
<br />
Поле содержит текст файла. Использование этого поля позволяет выводить на странице содержимое текстовых файлов или результатов работы </span><span class="mono"><b><a href="filecgiexec.htm">file::cgi</a></b></span><span> и </span><span class="mono"><b><a href="filecgiexec.htm">file::exec</a></b></span><span>.
<br />

<br />
</span><span class="h1"><b>Дополнительная информация о файле</b></span><span>
<br />
</span><span class="mono"><span class="monoblue"><b>$файл.cdate</b></span></span><span> - дата создания;  
<br />
</span><span class="mono"><span class="monoblue"><b>$файл.mdate</b></span></span><span> - дата изменения;  
<br />
</span><span class="mono"><span class="monoblue"><b>$файл.adate</b></span></span><span> - дата последнего обращения к файлу.
<br />
</span><span class="h1"><b>
<br />
</b></span><span>Поля доступны если объект получен конструкторами </span><span class="mono"><b><a href="filestat.htm">file::stat</a></b></span><span> или </span><span class="mono"><b>file::load</b></span><span> путём загрузки локального файла</span><span class="h1"><b>&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.3.0]</i></b></span><span class="mono"><b>
<br />
</b></span><span class="h1"><b>
<br />
</b><b>stderr. Текст ошибки выполнения программы
<br />
</b></span><span class="mono"><span class="monoblue"><b>$файл.stderr</b></span></span><span class="mono"><b>
<br />
</b></span><span>
<br />
При выполнении </span><span class="mono"><b><a href="filecgiexec.htm">file::cgi</a></b></span><span> и </span><span class="mono"><b><a href="filecgiexec.htm">file::exec</a></b></span><span> сюда попадает текст из стандартного потока ошибок программы.
<br />

<br />
</span><span class="h1"><b>status. Статус получения файла</b></span><span>
<br />
</span><span class="mono"><span class="monoblue"><b>$файл.status</b></span></span><span class="mono"><b>
<br />
</b></span><span>
<br />
При выполнении </span><span class="mono"><b><a href="filecgiexec.htm">file::cgi</a></b></span><span> и </span><span class="mono"><b><a href="filecgiexec.htm">file::exec</a></b></span><span> в поле </span><span class="mono"><b>status</b></span><span> попадает статус выполнения программы (0=успех).
<br />
При выполнении </span><span class="mono"><b><a href="fileload.htm">file::load</a></b></span><span> с <a href="app1.htm">HTTP сервера</a>, сюда попадает статус выполнения HTTP запроса (200=успех).
<br />

<br />
</span><span class="h1"><b>mode. Формат файла&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.</i></b><b><i>4</i></b><b><i>.0]</i></b>
<br />
</span><span class="mono"><span class="monoblue"><b>$файл.mode</b></span></span><span class="mono"><b>
<br />

<br />
</b></span><span>Может иметь значение </span><span class="mono"><b>text</b></span><span> или </span><span class="mono"><b>binary.</b><b>
<br />
</b></span><span>
<br />
</span><span class="h1"><b>content-type. MIME-тип файла
<br />
</b></span><span class="mono"><span class="monoblue"><b>$файл.content-type</b></span></span><span><b>
<br />
</b></span><span>
<br />
Поле может содержать MIME-тип файла. При выполнении CGI-скрипта (см. </span><span class="mono"><b><a href="filecgiexec.htm">file::cgi</a></b></span><span>) MIME-тип может задаваться CGI-скриптом, полем  заголовка ответа «</span><span class="mono">content-type</span><span>». При загрузке (см. </span><span class="mono"><b><a href="fileload.htm">file::load</a></b></span><span>) или получении информации о файле (см. </span><span class="mono"><b><a href="filestat.htm">file::stat</a></b></span><span>) MIME-тип определяется по таблице </span><span class="mono"><b>$</b><b><a href="parserconfmethod.htm">MAIN:MIME-TYPES</a></b></span><span> (см. «<a href="parserconfmethod.htm">Конфигурационный метод</a>»), если в таблице расширение имени файла найдено не будет, будет использован тип «</span><span class="mono">application/octet-stream</span><span>».
<br />

<br />
</span><span class="h1"><b>Поля HTTP-ответа
<br />
</b></span><span>Если файл был загружен с HTTP-сервера, поля заголовков HTTP-ответа доступны, как поля объекта класса </span><span class="mono"><b>file</b></span><span>:
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>$файл.ПОЛЕ_HTTP_ОТВЕТА</b></span></span><span>  (ЗАГЛАВНЫМИ БУКВАМИ)</span><span class="mono"><b>
<br />
</b></span><span>
<br />
Например: </span><span class="mono"><span class="monoblue"><b>$файл.SERVER</b></span></span><span>
<br />

<br />
Если один заголовок повторяется в ответе несколько раз, все его значения доступны в поле </span><span class="mono"><b>tables</b></span><span>:
<br />

<br />
</span><span class="mono"><b>$.tables[
<br />
&nbsp;&nbsp;&nbsp;$.HTTP-ЗАГОЛОВОК[</b>таблица&nbsp;значений,&nbsp;единственный&nbsp;столбец&nbsp;<b>value]
<br />
]</b>
<br />
</span><span>
<br />
Пример:
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>$f[^file::load[binary;</b></span></span><span class="mono"><b>http://www.parser.ru</b><span class="monoblue"><b>]]
<br />
^f.tables.foreach[key;value]{
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$key=^value.menu{$value.value}[</b></span></span><span class="mono"><b>|</b><span class="monoblue"><b>]</b></span></span><span class="mono"><b>&lt;br&nbsp;/&gt;</b><span class="monoblue"><b>
<br />
}</b></span></span><span class="mono"><b>
<br />
</b></span></span><br />




</body>
</html>