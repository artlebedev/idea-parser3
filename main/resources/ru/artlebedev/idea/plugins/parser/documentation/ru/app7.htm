<html>
<head>
    
    
    <title>Приложение 7. SQL сервера, работа с IN/OUT переменными</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Приложение 7. SQL сервера, работа с IN/OUT переменными</b><span><b><i> [3.1.4]</i></b></span><span class="h1"><b>
<br />
</b></span></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span>При работе с SQL сервером Oracle поддерживается работа со связанными переменными (bind variables), поддерживаются <span class="mono">IN</span><span>, </span><span class="mono">OUT</span><span> и </span><span class="mono">IN/OUT</span><span> переменные, которые связываются с передаваемым в запрос <a href="hash.htm">хешем</a>.
<br />

<br />
При прямом использовании конструкций </span><span class="mono">CALL</span><span> </span><span class="mono">и</span><span> </span><span class="mono">EXECUTE</span><span> в некоторых версиях Oracle имеются известные проблемы, рекомендуем пользоваться PL/SQL оберткой (</span><span class="mono">begin&nbsp;…;&nbsp;end;</span><span>), не забывайте <a href="stringlit.htm">экранировать</a> знак «;».
<br />

<br />
<i>Примечание: значение типа </i></span><span class="mono"><b><a href="voidclass.htm">void</a></b></span><span><i> соответствует </i></span><span class="mono">NULL</span><span><i>. Во втором примере </i></span><span class="mono"><b>days</b></span><span><i> имеет начальное значение </i></span><span class="mono">NULL</span><span><i>.</i>
<br />

<br />
</span><span class="h1"><b>Пример использования IN переменных
<br />
</b></span><span class="mono"><b>
<br />
</b><span class="monoblue"><b>#procedure&nbsp;ban_user(user_id&nbsp;in&nbsp;number,&nbsp;days&nbsp;in&nbsp;number)</b></span></span><span class="mono"><b>
<br />

<br />
</b><span class="monoblue"><b>^void:sql{</b></span></span><span class="mono"><b>begin&nbsp;ban_user(:user_id,&nbsp;:days)^;&nbsp;end^;</b><span class="monoblue"><b>}[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$.bind[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.user_id(7319)
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.days(10)
<br />
&nbsp;&nbsp;&nbsp;&nbsp;]
<br />
]
<br />
</b></span></span><span>
<br />
</span><span class="h1"><b>Пример использования IN и OUT переменных
<br />
</b></span><span class="mono"><b>
<br />
</b><span class="monoblue"><b>#procedure&nbsp;read_user_ban_days(user_id&nbsp;in&nbsp;number,&nbsp;days&nbsp;out&nbsp;number)</b></span></span><span class="mono"><b>
<br />

<br />
</b><span class="monoblue"><b>$variables[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$.user_id(7319)
<br />
#несмотря&nbsp;на&nbsp;то,&nbsp;что&nbsp;параметр&nbsp;OUT,&nbsp;все&nbsp;равно&nbsp;необходимо&nbsp;его&nbsp;передать
<br />
#его&nbsp;текущее&nbsp;значение&nbsp;будет&nbsp;проигнорировано
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$.days[]
<br />
]
<br />

<br />
^void:sql{</b></span></span><span class="mono"><b>begin&nbsp;read_user_ban_days(:user_id,&nbsp;:days)^;&nbsp;end^;</b><span class="monoblue"><b>}[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$.bind[$variables]
<br />
]
<br />
</b></span></span><span class="mono"><b>
<br />
Пользователь&nbsp;выключен&nbsp;на</b><span class="monoblue"><b>&nbsp;$variables.days!</b></span></span><span>
<br />
</span></span><br />




</body>
</html>