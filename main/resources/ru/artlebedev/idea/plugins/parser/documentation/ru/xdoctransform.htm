<html>
<head>
    
    
    <title>transform. XSL преобразование</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>transform. XSL преобразование
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>^документ.transform[шаблон]
<br />
^документ.transform[шаблон][XSLT-параметры]
<br />
</b><span>
<br />
Осуществляет XSL-преобразование </span><span class="mono"><b>документа</b></span><span> по </span><span class="mono"><b>шаблону</b></span><span>. Возможно задание </span><span class="mono"><b>XSLT-параметров</b></span><span>.
<br />

<br />
</span><span class="mono"><b>Шаблон</b></span><span> - или </span><span class="mono"><b>путь_к_файлу_с_шаблоном</b></span><span>, или </span><span class="mono"><b><a href="xdocclass.htm">xdoc</a></b></span><span> документ.
<br />
Parser может считать XML из произвольного источника, см. раздел «<a href="xdocparserprot.htm">Чтение XML из произвольного источника</a>».
<br />
</span><span class="mono"><b>
<br />
</b><b>XSLT-параметры</b></span><span> - <a href="hash.htm">хеш</a> строк, доступных из шаблона через </span><span class="mono"><span class="monoblue"><b><u><a href="http://www.w3.org/TR/xslt#variables" target="_blank">&lt;xsl:param … /&gt;</a></u></b></span></span><span>.
<br />

<br />
<i>Внимание: Parser (в виде </i><i><a href="install4apachecgi.htm">модуля к Apache</a></i><i> или </i><i><a href="install4iis.htm">IIS</a></i><i>) кеширует результат компиляции </i></span><span class="mono"><b>файла_с_шаблоном</b></span><span><i> во внутреннюю форму, </i><i>повторная компиляция не производится, а скомпилированный шаблон берется из кеша. Вариант CGI также кеширует шаблон, но только на один запрос. Шаблон перекомпилируется при изменении даты файлов шаблона.
<br />
</i>
<br />
</span><span class="h1"><b>Пример (см. также «</b><b><a href="lesson6.htm">Урок 6. Работаем с XML</a></b><b>»)
<br />
</b></span><span class="mono"><span class="monoblue"><b>#&nbsp;входной&nbsp;xdoc&nbsp;документ
<br />
$sourceDoc[^xdoc::</b></span></span><span class="mono"><span class="monoblue"><b><a href="xdocload.htm">load</a></b></span></span><span class="mono"><span class="monoblue"><b>[article.xml]]
<br />

<br />
#&nbsp;преобразование&nbsp;xdoc&nbsp;документа&nbsp;шаблоном&nbsp;article.xsl
<br />
$transformedDoc[^sourceDoc.transform[article.xsl]]
<br />

<br />
#&nbsp;выдача&nbsp;результата&nbsp;в&nbsp;HTML&nbsp;виде
<br />
^transformedDoc.</b></span></span><span class="mono"><span class="monoblue"><b><a href="xdocstring.htm">string</a></b></span></span><span class="mono"><span class="monoblue"><b>[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b><a href="xdocoptions.htm">$.method[html]</a></b></span></span><span class="mono"><span class="monoblue"><b>
<br />
]
<br />
</b></span></span><span>
<br />
Если </span><span class="mono"><b>шаблон</b></span><span> не считывается с диска, а создается динамически, важным вопросом становится «а откуда загрузятся </span><span class="mono"><b>&lt;xsl:import&nbsp;href="some.xsl"/&gt;</b></span><span>?», обратите внимание на возможность задания базового пути: «<a href="xdocuriparam.htm">Параметр создания нового документа: Базовый путь</a>».
<br />
</span></span><br />




</body>
</html>