/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ParserDocumentationForm.java
 *
 * Created on Apr 13, 2011, 2:55:01 AM
 */

package ru.artlebedev.idea.plugins.parser.editor.ui;

import ru.artlebedev.idea.plugins.parser.documentation.Marker;

import javax.swing.*;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import java.io.IOException;

/**
 *
 * @author dwr
 */
public class ParserDocumentationForm extends javax.swing.JFrame {

    /** Creates new form ParserDocumentationForm */
    public ParserDocumentationForm() {
      initComponents();

      try {
        StyleSheet styleSheet = ((HTMLEditorKit) jEditorPane1.getEditorKit()).getStyleSheet();
        styleSheet.addRule("body { padding: 5px; font-size: 10px; font-family: Arial; }");
        styleSheet.addRule(".h1 { font-size: 12px; }");
        styleSheet.addRule(".mono { font-family: Monospace; }");
        styleSheet.addRule(".monoblue { font-family: Monospace; }");
        styleSheet.addRule(".monoblue { color: #0000FF; }");
        styleSheet.addRule(".blue { color: #0000FF; }");
        styleSheet.addRule(".greenline { height: 3px; font-size: 3px; background:#99D228; }");
        jEditorPane1.setPage(Marker.class.getResource("ru/dateclass.htm"));
      } catch (IOException ignored) {

      }

      setSize(500, 300);
    }

  public void setPage(String pageName) {
    try {
      jEditorPane1.setPage(Marker.class.getResource("ru/" + pageName + ".htm"));
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    setLocationRelativeTo(null);

    jScrollPane1 = new javax.swing.JScrollPane();
    jEditorPane1 = new javax.swing.JEditorPane();

    setTitle("Parser Documentation Viewer");

    jEditorPane1.setContentType("text/html");
    jEditorPane1.setEditable(false);
    jEditorPane1.setBorder(BorderFactory.createEmptyBorder());
    jEditorPane1.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jEditorPane1KeyPressed(evt);
      }
    });
    jScrollPane1.setViewportView(jEditorPane1);

    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jEditorPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEditorPane1KeyPressed
      // TODO add your handling code here:
      if(evt.getKeyCode() == 27) {
        setVisible(false);
      }
    }//GEN-LAST:event_jEditorPane1KeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ParserDocumentationForm().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JEditorPane jEditorPane1;
  private javax.swing.JScrollPane jScrollPane1;
  // End of variables declaration//GEN-END:variables

}
