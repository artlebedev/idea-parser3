<html>
<head>
    
    
    <title>uuid. Universally unique identifier</title>

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span><b>uuid. Universally unique identifier</b><b><i>
<br />
</i></b></span>
    </td>
  </tr>
  <tr><td bgcolor="#99D228" height="3"></td></tr>
</table>
<br />



<span><b>^math:uuid[]
<br />
</b><span>
<br />
The method outputs random string of format&#133;
<br />
22C0983C-E26E-4169-BD07-77ECE9405BA5
<br />

<br />
<i>Note: in some OSes outputs pseudorandom string.
<br />
</i>
<br />
This method is useful in cases when it is hard or insensible to use through-numbering of objects, e.g. while performing distributed computing.
<br />

<br />
<i>UUID is also known as GUID.</i><i>
<br />
</i></span><span><b>
<br />
</b><b>Example</b></span><span><u>
<br />
</u>A company's branches accumulate orders and periodically send them to headquarters. To ensure identifier's uniqueness, we use UUID.
<br />

<br />
</span><span><span><b>#&nbsp;different&nbsp;branches&nbsp;accumulate&nbsp;order's&nbsp;information&nbsp;in&nbsp;tables&nbsp;'orders'&nbsp;and&nbsp;'order_details'
<br />

<br />
#&nbsp;create&nbsp;unique&nbsp;identifier
<br />
$order_uuid[^math:uuid[]]
<br />

<br />
#&nbsp;add&nbsp;record&nbsp;about&nbsp;order</b></span></span><span><b>
<br />
</b></span><span><span><b>^void:</b></span></span><span><span><b><a href="voidsql.htm">sql</a></b></span></span><span><span><b>{</b></span></span><span><b>
<br />
insert&nbsp;into&nbsp;orders
<br />
&nbsp;&nbsp;&nbsp;&nbsp;(order_uuid,&nbsp;date_ordered,&nbsp;total)
<br />
values
<br />
&nbsp;&nbsp;&nbsp;&nbsp;('</b><span><b>$order_uuid</b></span></span><span><b>',&nbsp;'</b><span><b>$date_ordered</b></span></span><span><b>',&nbsp;</b><span><b>$total</b></span></span><span><b>)
<br />
</b><span><b>}
<br />
</b></span></span><span><span><b>#&nbsp;cycle&nbsp;adding&nbsp;records&nbsp;on&nbsp;ordered&nbsp;goods&nbsp;should&nbsp;be&nbsp;here
<br />
</b></span></span><span><span><b>^void:</b></span></span><span><span><b><a href="voidsql.htm">sql</a></b></span></span><span><span><b>{
<br />
</b></span></span><span><b>insert&nbsp;into&nbsp;order_details
<br />
&nbsp;&nbsp;&nbsp;&nbsp;(order_uuid,&nbsp;item_id,&nbsp;price)
<br />
values
<br />
&nbsp;&nbsp;&nbsp;&nbsp;('</b><span><b>$order_uuid</b></span></span><span><b>',&nbsp;</b><span><b>$item_id</b></span></span><span><b>,&nbsp;</b><span><b>$price</b></span></span><span><b>)
<br />
</b><span><b>}</b></span></span><span><b>
<br />

<br />

<br />
</b><span><b>#&nbsp;parts&nbsp;of&nbsp;tables&nbsp;'orders'&nbsp;and&nbsp;'order_details'&nbsp;are&nbsp;periodically&nbsp;retrieved
<br />
#&nbsp;and&nbsp;sent&nbsp;(^mail</b></span></span><span><span><b>:</b></span></span><span><span><b><a href="mailsend.htm">send</a></b></span></span><span><span><b>[&#133;]</b></span></span><span><span><b>)</b></span></span><span><span><b>&nbsp;</b></span></span><span><span><b>to&nbsp;headquarters,
<br />
#&nbsp;where&nbsp;these&nbsp;parts&nbsp;of&nbsp;tables&nbsp;are&nbsp;added&nbsp;to&nbsp;common&nbsp;tables&nbsp;'orders'&nbsp;and&nbsp;'order_details'
<br />
#&nbsp;&#133;WITHOUT&nbsp;any&nbsp;problems&nbsp;with&nbsp;multiple&nbsp;instances&nbsp;of&nbsp;'order_id'</b></span></span><span><b>
<br />
</b><b>
<br />
</b></span><span><i>Note: Parser generates UUID based on random numbers, not on time. Parameters are:
<br />
variant&nbsp;= DCE;
<br />
version&nbsp;= DCE Security version, with embedded POSIX UIDs.
<br />
&#133;that means that not all of the UUID bits are picked up at random. It is to be so, indeed:
<br />
xxxxxxxx-xxxx-4xxx-{8,9,A,B}xxx-xxxxxxxxxxxx
<br />

<br />
Detailed information on UUID is available at:</i><i> </i><span><i><u><a href="http://www.opengroup.org/onlinepubs/9629399/apdxa.htm" target="_blank">http://www.opengroup.org/onlinepubs/9629399/apdxa.htm</a></u></i></span></span><span><i>
<br />
</i></span></span><br />




</body>
</html>