<html>
<head>
    
    
    <title>string. Converting Parser object into JSON-string</title>

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span><b>string. Converting Parser object into JSON-string</b><b>
<br />
</b></span>
    </td>
  </tr>
  <tr><td bgcolor="#99D228" height="3"></td></tr>
</table>
<br />



<span><b>^json:string[object;options]
<br />
</b><b>
<br />
</b><span>Method serializes system of user object into JSON-string.</span><span><b>
<br />
</b><b>
<br />
</b><b>Options</b></span><span>-<a href="hash.htm">hash</a> with parsing options.</span><span><b>
<br />
</b></span><span><table border="0" cellpadding="1"><tr><td align="left" valign="top" width="288">
<span>
<br />
</span></td><td align="left" valign="top" width="103">
<span><b><i>Default</i></b>
<br />
</span></td><td align="left" valign="top" width="467">
<span><b><i>Value</i></b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="288">
<span><b>$.skip-unknown(</b><span><a href="boolclass.htm">true|false</a></span><span><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>false
<br />
</span></td><td align="left" valign="top" width="467">
<span>By default (<span><b>false</b></span><span>) only the objects of classes  <a href="voidclass.htm">void</a>, <a href="boolclass.htm">bool</a>, <a href="stringclass.htm">string</a>, <a href="intdoubleclasses.htm">int</a>, <a href="intdoubleclasses.htm">double</a>, <a href="dateclass.htm">date</a>, <a href="tableclass.htm">table</a>, <a href="hashclass.htm">hash</a> &#232; <a href="fileclass.htm">file</a> are accepted. Other objects will cause an exception.
<br />
If this option is set to </span><span><b>true</b></span><span>, these objects will be skipped silently.
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span><b>$.indent(</b><span><a href="boolclass.htm">true|false</a></span><span><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>false
<br />
</span></td><td align="left" valign="top" width="467">
<span>If this option is set to <span><b>true</b></span><span> the resulting JSON-string will be formatted using tab characters.
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span><b>$.date[</b><span>sql-string|gmt-string|unix-timestamp</span><span><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>sql-string<span>
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Defines format of objects of class <a href="dateclass.htm">date</a>  (see the methods of class date with the same names).<span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span><b>$.table[</b><span>object|array|compact</span><span><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>object<span>
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Defines format of objects of class <a href="tableclass.htm">table</a>.
<br />
<span><b>object</b></span><span>:
<br />
    [{"col1":"val11","col2":"val12",...},{"col1":"val21","col2":"val22",...},...]
<br />
</span><span><b>array</b></span><span>:
<br />
    [["col1","col2",...] || null (for nameless &#242;&#224;&#225;&#235;&#232;&#246;),["val11","val12",...],...]
<br />
</span><span><b>compact</b></span><span>:
<br />
     ["value11" || ["val11","val12",...],...]</span><span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span><b>$.file[</b><span>text|base64</span><span><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>not defined
<br />
<span>
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Defines format of bodies of objects of class  <a href="fileclass.htm">file</a>.
<br />
If not specified (default) the files' bodies will be omited.<span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span><b>$.class</b><b>-name</b><b>[</b><span><a href="junctionclass.htm">method name</a></span><span><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>not defined<span>
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Objects of any class (including mentioned date, table and file) could be serialized with user's method. The method must accept three parameters - object's name, value and options. The options is needed for serializing user's objects recursively.<span>
<br />
</span></span></td></tr></table>
<br />

<br />
</span><span><b>Example
<br />
</b></span><span><span><b>@main[]
<br />
$h[
<br />
&nbsp;&nbsp;&nbsp;$.void[]
<br />
&nbsp;&nbsp;&nbsp;$.bool(true)
<br />
&nbsp;&nbsp;&nbsp;$.double(1/2)
<br />
&nbsp;&nbsp;&nbsp;$.string[</b></span></span><span><b>ABC</b><span><b>]
<br />
&nbsp;&nbsp;&nbsp;$.hash[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.e[ee]
<br />
&nbsp;&nbsp;&nbsp;]
<br />
&nbsp;&nbsp;&nbsp;$.date[^date::create(2006;08;18;06;09;00)]
<br />
&nbsp;&nbsp;&nbsp;$.table[^table::create{c1&nbsp;&nbsp;&nbsp;c2&nbsp;&nbsp;&nbsp;c3^#0Av1&nbsp;&nbsp;&nbsp;v2&nbsp;&nbsp;&nbsp;v3^#0Av4&nbsp;&nbsp;&nbsp;v5&nbsp;&nbsp;&nbsp;v6}]
<br />
&nbsp;&nbsp;&nbsp;$.file[^file::create[text;</b></span></span><span><b>zigi.txt</b><span><b>;</b></span></span><span><b>file-content</b><span><b>]]
<br />
&nbsp;&nbsp;&nbsp;$.img[^image::create(100;100;0)]
<br />
]
<br />
^json:string[$h;
<br />
&nbsp;&nbsp;&nbsp;$.indent(true)
<br />
&nbsp;&nbsp;&nbsp;$.table[array]
<br />
&nbsp;&nbsp;&nbsp;$.file[base64]
<br />
&nbsp;&nbsp;&nbsp;$.image[$image_handler]
<br />
]
<br />

<br />
@image_handler[key;value]
<br />
"</b></span></span><span><b>custom&nbsp;value&nbsp;of&nbsp;image&nbsp;</b><span><b>$key"</b></span></span><span><span><b>
<br />

<br />
</b></span></span><span>&#133;will returns:</span><span><span><b>
<br />
</b></span></span><span><b>{
<br />
&nbsp;&nbsp;&nbsp;"void":"",
<br />
&nbsp;&nbsp;&nbsp;"bool":true,
<br />
&nbsp;&nbsp;&nbsp;"double":0.5,
<br />
&nbsp;&nbsp;&nbsp;"string":"ABC",
<br />
&nbsp;&nbsp;&nbsp;"hash":{
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"e":"ee"
<br />
&nbsp;&nbsp;&nbsp;},
<br />
&nbsp;&nbsp;&nbsp;"date":"2006-08-18&nbsp;06:09:00",
<br />
&nbsp;&nbsp;&nbsp;"table":[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;["c1","c2","c3"],
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;["v1","v2","v3"],
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;["v4","v5","v6"]
<br />
&nbsp;&nbsp;&nbsp;],
<br />
&nbsp;&nbsp;&nbsp;"file":{
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"class":"file",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name":"zigi.txt",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"size":12,
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"content-type":"text\/plain",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"mode":"text",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"base64":"ZmlsZS1jb250ZW50"
<br />
&nbsp;&nbsp;&nbsp;},
<br />
&nbsp;&nbsp;&nbsp;"img":"custom&nbsp;value&nbsp;of&nbsp;image&nbsp;img"
<br />
}
<br />
</b></span><span>
<br />
</span></span><br />




</body>
</html>