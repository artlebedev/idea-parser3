<html>
<head>
    
    
    <title>Error handling</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Error handling
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span>To err is human. You should be ready for error messages to pop up unexpectedly from time to time. Unfortunately, this is nearly inevitable. In the beginning, error messages will crop up rather often. At first, the main reason for it will most probably be unbalanced brackets (remember-we mentioned text editors, which support auto brace matching) or mistyping Parsers constructions.
<br />

<br />
If an error occurs, page processing will stop, all currently active SQL connections will be rolled back, and method <span class="mono"><b><a href="exceptionunhandled.htm">unhandled_exception</a></b></span><span>, will be called. This method will receive information on the error as well as the stack of calls that caused it. The method's work will result in a custom message to be output to a visitor. The result of the page's code with error will not be output at all. The error will also be recorded in web-server's error log.
<br />

<br />
Still, it is often desirable to intercept an error and do something useful with it. Let's assume you want to check if XML code from an untrustworthy source is correct. In this case, you do not want processing to stop, quite the contrary, you do expect an error of a certain type and want to handle it. Parser is glad to meet your wishes and gives you a powerful tool: operator </span><span class="mono"><b><a href="optry.htm">try</a></b></span><span>.
<br />

<br />
During a complex data processing, an error may appear in a method which is called from another one, which is, in its turn, is called from a third, and so on&#133; How can we simply report and handle the error in this case? Use operator  </span><span class="mono"><b><a href="opthrow.htm">throw</a></b></span><span>, to report the error-and handle the error on the top level. In this case you will not have to check it on all nesting levels of the method calls.
<br />

<br />
It is also very often that Parser itself or its system classes report errors. See "<a href="parserexceptions.htm">System errors</a>".
<br />
</span></span><br />




</body>
</html>