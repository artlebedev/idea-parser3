<html>
<head>
    
    
    <title>use. Linking modules</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>use. Linking modules
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>^use[file]
<br />
</b><span>
<br />
Operator </span><span class="mono"><b>use</b></span><span> allows using a module from specified file. If path begins with symbol "</span><span class="mono">/</span><span>", it will be regarded as path from Web-space root. In any other case, Parser will look for the module by relative path first and then if nothing was found in directories specified in variable </span><span class="mono"><b>$CLASS_PATH</b></span><span> in <a href="parserconfmethod.htm">Configuration method</a>. 
<br />

<br />
<i>Note: before version 3.4.1 Parser did not look for the module by relative path from the file with the processed </i><b><i>@USE/^use[]</i></b><i> instruction.</i>
<br />

<br />
The following construction can be used to link modules, too:
<br />
</span><span class="mono"><b>@USE
<br />
</b><b>filename</b><b>&nbsp;1
<br />
</b><b>filename</b><b>&nbsp;2</b></span><span>
<br />
</span><span>&#133;
<br />

<br />
The difference between these constructions lies in that </span><span class="mono"><b>@USE</b></span><span> loads a module before a code is executed, while operator </span><span class="mono"><b>use</b></span><span> can be called right from the script's body. 
<br />
For example:
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>^if(condition){
<br />
&nbsp;&nbsp;&nbsp;^use[module1]
<br />
}{
<br />
&nbsp;&nbsp;&nbsp;^use[module2]
<br />
}</b></span></span><span class="mono"><b>
<br />
</b></span><span>
<br />
<i>Note: attempts to use a module which were already used would not cause reread of that module.</i><i>
<br />
</i>
<br />
We do recommend that you save the results of code's work by linking necessary modules with operator </span><span class="mono"><b>use</b></span><span> within the code of operator </span><span class="mono"><b><a href="opcache.htm">cache</a></b></span><span>.
<br />
</span></span><br />




</body>
</html>