<html>
<head>
    
    
    <title>Class options</title>

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span><b>Class options</b><b>
<br />
</b></span>
    </td>
  </tr>
  <tr><td bgcolor="#99D228" height="3"></td></tr>
</table>
<br />



<span>Any <span><b>libcurl</b></span><span> option could be specified as an option of methods </span><span><b>^</b><b><a href="curloptions.htm">curl:options</a></b><b>[]</b></span><span> and </span><span><b>^</b><b><a href="curlload.htm">curl:load</a></b><b>[]</b></span><span> (see <span><u><a href="http://curl.haxx.se/libcurl/c/curl_easy_setopt.html" target="_blank">http://curl.haxx.se/libcurl/c/curl_easy_setopt.html</a></u></span></span><span>). Options' names should be written in lowercase and without the CURLOPT_ prefix.
<br />

<br />
Also, Parser supports the following options:
<br />
<table border="0" cellpadding="1"><tr><td align="left" valign="top" width="230">
<span><b><i>Option</i></b><b>
<br />
</b></span></td><td align="left" valign="top" width="206">
<span><b><i>Default</i></b><b>
<br />
</b></span></td><td align="left" valign="top" width="344">
<span><b><i>Value</i></b><span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span><b>$.library[</b><span>/path/to/libcurl.so</span><span><b>]</b></span><span>
<br />
</span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>unix - libcurl.so
<br />
win32 - libcurl.dll
<br />
</span></td><td align="left" valign="top" width="344">
<span>Full path to dynamical libcurl library.
<br />
</span></td></tr><tr><td align="left" valign="top" width="230">
<span><b>$.charset[</b><span>&#234;&#238;&#228;&#232;&#240;&#238;&#226;&#234;&#224;</span><span><b>]</b></span><span>
<br />
</span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>taken from HTTP response header<span>
<br />
</span></span></td><td align="left" valign="top" width="344">
<span>Charset used in documents on remote server. This charset is used to transcode request string and response body.<span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span><b>$.name[</b><span>file name</span><span><b>]</b></span><span>
<br />
</span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>NONAME.DAT<span>
<br />
</span></span></td><td align="left" valign="top" width="344">
<span>The <a href="filefields.htm">name</a> of the created file object.<span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span><b>$.mode[</b><span>text|binary</span><span><b>]
<br />
</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>text<span>
<br />
</span></span></td><td align="left" valign="top" width="344">
<span>The <a href="filefields.htm">mode</a> of the created file object.<span>
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="230">
<span><b>$.content-type[</b><span>CONTENT-TYPE</span><span><b>]</b></span><span>
<br />
</span><span>
<br />
</span></span></td><td align="left" valign="top" width="206">
<span>taken from HTTP response header
<br />
</span></td><td align="left" valign="top" width="344">
<span>The <a href="filefields.htm">content-type</a> of the created file object.<span>
<br />
</span></span></td></tr></table>
<br />

<br />

<br />
</span></span><br />




</body>
</html>