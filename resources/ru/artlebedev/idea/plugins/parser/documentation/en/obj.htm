<html>
<head>
    
    
    <title>Object of a class</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Object of a class
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="h1"><b>Creating object
<br />
</b><span class="mono"><b>^class::constructor</b><b>[</b><b><a href="params.htm">parameters</a></b><b>]
<br />
</b></span><span>
<br />
Constructor of a class creates an object of this class and allows further using common fields and methods of the class. For detailed description of constructors' parameters, please refer to respective chapter.
<br />

<br />
<i>Note: the result of constructor's work is created object, common result of a method's work is ignored (doesn't get anywhere).</i></span><span class="h1"><i>
<br />
</i></span><span>
<br />
</span><span class="h1"><b>Calling object
<br />
</b></span><span class="mono"><b>^class.method</b><b>[</b><b><a href="params.htm">parameters</a></b><b>]
<br />
</b></span><span>
<br />
Calls method of the class the object belongs to. For detailed description of constructors' parameters, please refer to respective chapter.
<br />
If object is not specified, this construction calls a method of the current class (if current class lacks the method called, a method of base class will be called) or an operator. In case of identical names, operator will be preferred.
<br />

<br />
Methods can be static and dynamic.</span><span class="h1">
<br />
</span><span>
<br />
</span><span class="mono"><b>Dynamic&nbsp;method</b></span><span>-code is executed within the scope of the object
<br />

<br />
</span><span class="mono"><span class="monoblue"><b><u><a href="stats.htm">Static method</a></u></b></span></span><span> code is executed within the scope of the class itself, that is, deals with not a certain object but the entire class (for example, classes  </span><span class="mono"><b><a href="mainclass.htm">MAIN</a></b></span><span>, </span><span class="mono"><span class="monoblue"><b><u><a href="mathclass.htm">math</a></u></b></span></span><span>, </span><span class="mono"><span class="monoblue"><b><u><a href="mailclass.htm">mail</a></u></b></span></span><span>)
<br />

<br />

<br />
</span><span class="h1"><b>Value of an object's field
<br />
</b></span><span class="mono"><span class="monoblue"><b>$object.field</b></span></span><span class="mono"><b>
<br />
</b></span><span>
<br />
Retrieves the value stored in object's field.
<br />

<br />

<br />
</span><span class="h1"><b>Retreaves object's fields as a hash</b></span><span><b><i> [3.4.0]</i></b></span><span class="h1"><b>
<br />
</b></span><span class="mono"><span class="monoblue"><b>$h[^hash::create[$object]]</b></span></span><span>
<br />

<br />
Creates a hash with object fields as keys.
<br />

<br />

<br />
</span><span class="h1"><b>Object's system field: CLASS
<br />
</b></span><span class="mono"><span class="monoblue"><b>$object.CLASS</b></span></span><span>-contains reference to the object's class
<br />

<br />
You may need this value to specify the scope of code's compilation (cf. "<a href="opprocess.htm">Process. Compiling and processing string</a>").
<br />

<br />

<br />
</span><span class="h1"><b>Object's</b><b> class name: CLASS_NAME</b></span><span class="mono"><b>&nbsp;&nbsp;&nbsp;&nbsp;</b></span><span><b><i>[3.2.2]</i></b></span><span class="h1"><b>
<br />
</b></span><span class="mono"><span class="monoblue"><b>$</b></span></span><span class="mono"><span class="monoblue"><b>object</b></span></span><span class="mono"><span class="monoblue"><b>.CLASS_NAME</b></span></span><span>-contains object's class name
<br />

<br />
</span><span class="h1"><b>Example</b><b>:</b></span><span>
<br />
</span><span class="mono"><span class="monoblue"><b>$var[123]
<br />
$var.CLASS_NAME</b></span></span><span><b>
<br />

<br />
</b>This example print 'string'.<b>
<br />
</b>
<br />
</span></span><br />




</body>
</html>