<html>
<head>
    
    
    <title>Внешние и внутренние данные</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Внешние и внутренние данные
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span>Создавая код на Parser, мы имеем дело с двумя видами данных. Один из них  - это все то, что написано самим кодером. Второй - данные, получаемые кодом извне, а именно из форм, переменных окружения, файлов, от SQL-серверов, из cookies и т.п. Все то, что создано кодером, не нуждается в проверке на корректность. Вместе с тем, когда данные поступают, например, от пользователей через поля форм, выводить их «<span class="mono"><b>as-is</b></span><span>» (как есть) может быть потенциально опасно. Возникает необходимость преобразования таких данных по определенным правилам. Большую часть работы по подобным преобразованиям Parser выполняет автоматически, не требуя вмешательства со стороны. Например, если присутствует вывод данных, введенных через поле формы, то в них символы </span><span class="mono"><b>&lt;&nbsp;&gt;</b></span><span> автоматически будут заменены на </span><span class="mono"><b>&amp;lt;</b></span><span> и </span><span class="mono"><b>&amp;gt;</b></span><span>. Иногда наоборот бывает необходимо позволить вывод таких данных именно в том виде, в котором они поступили. 
<br />

<br />
Для Parser «свой» код, т.е. тот, который набрал кодер, считается </span><span class="mono"><b>clean</b></span><span> («чистым»). Все данные, которые поступают извне, считаются </span><span class="mono"><b>tainted</b></span><span> («грязными» или «окрашенными»).
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>код&nbsp;Parser</b></span></span><span> - этот код создан скриптовальщиком, поэтому никаких вопросов не вызывает;
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>$</b></span></span><span class="mono"><span class="monoblue"><b><a href="formclass.htm">form</a></b></span></span><span class="mono"><span class="monoblue"><b>:</b></span></span><span class="mono"><span class="monoblue"><b><a href="formfield.htm">field</a></b></span></span><span> - здесь должны быть выведены данные, введенные пользователем через форму;
<br />

<br />
</span><span class="mono"><span class="monoblue"><b>$my_table[^</b></span></span><span class="mono"><span class="monoblue"><b><a href="tableclass.htm">table</a></b></span></span><span class="mono"><span class="monoblue"><b>::</b></span></span><span class="mono"><span class="monoblue"><b><a href="tablesql.htm">sql</a></b></span></span><span class="mono"><span class="monoblue"><b>{запрос}]</b></span></span><span> - здесь данные поступают из БД.
<br />

<br />
В случае с </span><span class="mono"><b>$form:field</b><b>,</b></span><span> поступившие </span><span class="mono"><b>tainted</b></span><span> данные будут автоматически преобразованы и некоторые символы заменятся в соответствии с внутренней таблицей замен Parser. После этого они станут </span><span class="mono"><b>clean</b></span><span> («чистыми»), и их «окрашенность» исчезнет. Здесь неявно выполняется операция </span><span class="mono"><b>untaint</b></span><span> (снять «окраску»). Автоматическое преобразование данных происходит в тот момент, когда эти данные будут выводиться. Так, в случае с помещением данных, поступивших из БД, в переменную </span><span class="mono"><b>$my_table</b></span><span>, преобразование выполнится в тот момент, когда данные будут в каком-либо виде выданы во внешнюю среду (переданы браузеру, сохранены в файл или базу данных). 
<br />

<br />
Вместе с тем, бывают ситуации, когда необходимости в таком преобразовании нет,  либо данные нужно преобразовать по другим правилам, чем это делает Parser по умолчанию. Например, нам нужно разрешить пользователю вводить HTML-теги через поле формы для дополнительного форматирования текста. Но, так как это чревато неприятностями (ввод Java-скрипта в гостевой книге может перенаправлять пользователей с вашего сайта на вражеский), Parser сам заменит «нежелательные» символы в соответствии со своими правилами. Решение - использование оператора </span><span class="mono"><b><a href="opuntainttaint.htm">untaint</a></b></span><span>.
<br />
</span></span><br />




</body>
</html>