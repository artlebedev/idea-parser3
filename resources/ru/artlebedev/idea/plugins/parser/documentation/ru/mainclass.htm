<html>
<head>
    
    
    <title>Класс MAIN, обработка запроса</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>Класс MAIN, обработка запроса
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span>Parser обрабатывает запрошенный документ следующим образом:
<br />

<br />
1.
<br />
Считываются, компилируются и инициализируются  <a href="parserconfig.htm">Конфигурационный файл</a>; затем все файлы с именем <span class="mono">auto.p</span><span>, поиск которых производится начиная от корня веб-пространства, и ниже по структуре каталогов, вплоть до каталога с запрошенным документом; наконец, сам запрошенный документ.
<br />
Все вместе они составляют определение класса </span><span class="mono"><b>MAIN</b></span><span>.
<br />
Инициализация заключается в вызове метода </span><span class="mono"><b>auto</b></span><span> каждого загруженного файла. Если определение этого метода содержит параметр, при вызове в нем будет передано имя загруженного файла.
<br />
<i>Примечание: результат работы метода посетителю не выводится.</i>
<br />

<br />
2.
<br />
Затем вызывается без параметров метод </span><span class="mono"><b>main</b></span><span> класса </span><span class="mono"><b>MAIN</b></span><span>.
<br />
Т.е. в любом из перечисленных файлов может быть определен метод </span><span class="mono"><b>main</b></span><span>, и будет вызван тот, который был определен последним - скажем, определение этого метода в запрошенном документе перекрывает все остальные возможные определения, и будет вызван именно он.
<br />
Результат работы этого метода будет передан пользователю, если не был определен метод </span><span class="mono"><b>postprocess</b></span><span>.
<br />
Если в файле не определен ни один метод, то все его тело считается определением метода </span><span class="mono"><b>main</b></span><span>.<i>
<br />
Примечание: задание </i></span><span class="mono"><b>$</b><b><a href="responseclass.htm">response</a></b><b>:</b><b><a href="responsebody.htm">body</a></b><b>[нестандартного&nbsp;ответа]</b></span><span><i> переопределяет текст, получаемый пользователем.</i>
<br />

<br />
3.
<br />
Если в классе </span><span class="mono"><b>MAIN</b></span><span> определен метод </span><span class="mono"><b>postprocess</b></span><span>, то результат работы метода </span><span class="mono"><b>main</b></span><span> передается единственным параметром этому методу, и пользователь получит уже его результат работы.
<br />
Таким образом вы получаете возможность «дополнительной полировки» результата работы вашего кода.
<br />

<br />
</span><span class="h1"><b>Простой пример</b></span><span>
<br />
Добавление такого определения, скажем, в файл </span><span class="mono">auto.p</span><span> в корне вашего веб-пространства…
<br />
</span><span class="mono"><span class="monoblue"><b>@postprocess[body]</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
^if($body&nbsp;is&nbsp;string){</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span class="mono"><span class="monoblue"><b>&nbsp;&nbsp;&nbsp;&nbsp;</b></span></span><span class="mono"><span class="monoblue"><b>^body.match[</b></span></span><span class="mono"><b>шило</b><span class="monoblue"><b>][g]{</b></span></span><span class="mono"><b>мыло</b><span class="monoblue"><b>}</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
}{
<br />
&nbsp;&nbsp;&nbsp;&nbsp;$body
<br />
}</b></span></span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span>
<br />
…приведет к замене одних слов на другие в результатах обработки всех страниц.
<br />
Не забудьте проверить тип </span><span class="mono"><b>body</b></span><span>, ведь там может быть <a href="responsebody.htm">файл</a>.</span><span class="mono"><b>
<br />
</b></span></span><br />




</body>
</html>