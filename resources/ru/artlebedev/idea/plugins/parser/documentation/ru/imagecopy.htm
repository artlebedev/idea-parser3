<html>
<head>
    
    
    <title>copy. Копирование фрагментов изображений</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span class="h1"><b>copy. Копирование фрагментов изображений
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>^картинка.copy[исходное_изображение](x1;y1;ширина1;высота1;x2;y2)
<br />
^картинка.copy[исходное_изображение](x1;y1;ширина1;высота1;x2;y2;ширина2;высота2;приближение&nbsp;цвета)
<br />
</b><span>
<br />
Метод копирует фрагмент одного </span><span class="mono"><b>изображения</b></span><span> в другое изображение. Это очень удобно использовать в задачах, подобных расставлению значков на карте. В качестве параметров методу передаются:
<br />

<br />
<table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="28"><span>1.</span></span></td><td><span>Исходное </span><span class="mono"><b>изображение</b></span><span>
&nbsp;<br />
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="28"><span>2.</span></td><td><span>координаты (X1;Y1) верхнего левого угла копируемого фрагмента
&nbsp;<br />
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="28"><span>3.</span></td><td><span></span><span class="mono"><b>ширина</b></span><span> и </span><span class="mono"><b>высота</b></span><span> копируемого фрагмента 
&nbsp;<br />
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="28"><span>4.</span></td><td><span>координаты (X2;Y2) по которым будет вставлен копируемый фрагмент
&nbsp;<br />
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="28"><span>5.</span></td><td><span>в качестве необязательных параметров могут быть заданы новая ширина и высота вставляемого фрагмента (в этом случае происходит масштабирование), а также величина, характеризующая точность передачи цвета. Чем она меньше, тем точнее цветопередача, но количество передаваемых цветом уменьшается и наоборот (по умолчанию равна 150)
&nbsp;<br />
</span></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td><span></span></td><td></td></tr></table><span>
<br />
</span><span class="h1"><b>Пример
<br />
</b></span><span class="mono"><span class="monoblue"><b>$mygif[^image::</b></span></span><span class="mono"><span class="monoblue"><b><a href="imageload.htm">load</a></b></span></span><span class="mono"><span class="monoblue"><b>[test.gif]]
<br />

<br />
$resample_width($mygif.</b></span></span><span class="mono"><span class="monoblue"><b><a href="imagefields.htm">width</a></b></span></span><span class="mono"><span class="monoblue"><b>*2)
<br />
$resample_height($mygif.height*2)
<br />

<br />
$mygif_new[^image::</b></span></span><span class="mono"><span class="monoblue"><b><a href="imagecreate.htm">create</a></b></span></span><span class="mono"><span class="monoblue"><b>($resample_width;$resample_height)]
<br />
^mygif_new.</b></span></span><span class="mono"><span class="monoblue"><b><a href="imagecopy.htm">copy</a></b></span></span><span class="mono"><span class="monoblue"><b>[$mygif](0;0;20;30;0;0;$mygif_new.width;$mygif_new.height)
<br />

<br />
$</b></span></span><span class="mono"><span class="monoblue"><b><a href="responsebody.htm">response:body</a></b></span></span><span class="mono"><span class="monoblue"><b>[^mygif_new.</b></span></span><span class="mono"><span class="monoblue"><b><a href="imagegif.htm">gif</a></b></span></span><span class="mono"><span class="monoblue"><b>[]]</b></span></span><span class="mono"><b>
<br />
</b></span><span>
<br />
В данном примере мы создаем два объекта класса </span><span class="mono"><b>image</b></span><span>. Первый создан на основе существующего GIF файла. Второй - вдвое больший по размеру, чем первый, создается самим Parser, после чего в него мы копируем фрагмент первого размером 20х30 и «растягиваем» этот фрагмент на всю ширину и высоту второго рисунка. Последняя строчка кода выводит увеличенный фрагмент на экран. Данный подход можно применять только для изображений, которые не требуется выводить с хорошим качеством.
<br />
</span></span><br />




</body>
</html>