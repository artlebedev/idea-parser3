<html>
<head>
    
    
    <title>string. Преобразование объекта Parser в JSON-строку</title><meta content="text/html; charset=utf-8" http-equiv="Content-Type">

    

</head>

<body>


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span style="font-family:Arial; font-size:12pt; color:#000000"><b>string. Преобразование объекта Parser в JSON-строку
<br />
</b></span>
    </td>
  </tr>
  <tr><td><div class="greenline"></div></td></tr>
</table>
<br />



<span class="mono"><b>^json:string[объект;опции&nbsp;преобразования]
<br />
</b><b>
<br />
</b><span>Метод преобразует системный или пользовательский объект в JSON-строку.</span><span class="mono"><b>
<br />

<br />
Опции</b></span><span> </span><span class="mono"><b>преобразования&nbsp;</b></span><span>- хеш, в котором можно указать:</span><span class="mono"><b>
<br />
</b></span><span><table border="0" cellpadding="1"><tr><td align="left" valign="top" width="288">
<span style="font-family:MS Sans Serif; font-size:8pt; color:#000000">
<br />
</span></td><td align="left" valign="top" width="103">
<span><b>По-умолчанию</b>
<br />
</span></td><td align="left" valign="top" width="467">
<span><b>Описание</b>
<br />
</span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.skip-unknown(</b><span><a href="boolclass.htm">true|false</a></span><span class="mono"><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>false
<br />
</span></td><td align="left" valign="top" width="467">
<span>При указании значения <span class="mono"><b>true</b></span><span> вместо exception в результирующую JSON-строку будут выдаваться значения 'null' при сериализации объектов с типами, отличными от <a href="voidclass.htm">void</a>, <a href="boolclass.htm">bool</a>, <a href="stringclass.htm">string</a>, <a href="intdoubleclasses.htm">int</a>, <a href="intdoubleclasses.htm">double</a>, <a href="dateclass.htm">date</a>, <a href="tableclass.htm">table</a>, <a href="hashclass.htm">hash</a> и <a href="fileclass.htm">file</a>.
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.indent(</b><span><a href="boolclass.htm">true|false</a></span><span class="mono"><b>)</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>false
<br />
</span></td><td align="left" valign="top" width="467">
<span>При указании значения <span class="mono"><b>true</b></span><span> будет включено форматирование результирующей JSON-строки символами табуляции по глубине вложенности.
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.date[</b><span>sql-string|gmt-string|unix-timestamp</span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>sql-string<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Опция определяет вид, в котором значения объектов класса <a href="dateclass.htm">date</a> будут попадать в результирующую JSON-строку (см. одноимённые методы объекта класса date).<span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.table[</b><span>object|array|compact</span><span class="mono"><b>]</b>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>object<span class="mono">
<br />
</span></span></td><td align="left" valign="top" width="467">
<span>Опция определяет вид, в котором значения объектов класса <a href="tableclass.htm">table</a> будут попадать в результирующую JSON-строку.
<br />
<span class="mono"><b>object:</b></span><span>
<br />
    [{"col1":"val11","col2":"val12",...},{"col1":"val21","col2":"val22",...},...]
<br />
</span><span class="mono"><b>array:
<br />
</b></span><span>    [["col1","col2",...] || null (для nameless таблиц),["val11","val12",...],...]
<br />
</span><span class="mono"><b>compact:
<br />
</b></span><span>     ["value11" || ["val11","val12",...],...]</span><span class="mono">
<br />
</span></span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.file[</b><span>text|base64</span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>не определён
<br />
</span></td><td align="left" valign="top" width="467">
<span>Опция определяет вид, в котором значения объектов типа <a href="fileclass.htm">file</a> будут попадать в результирующую JSON-строку.
<br />
По умолчанию (если данная опция не определена) в результирующую JSON-строку попадает информация об объектах класса file (имя файла, размер, content-type, mode), но их содержимое не попадает.
<br />
</span></td></tr><tr><td align="left" valign="top" width="288">
<span class="mono"><b>$.класс[</b><span><a href="junctionclass.htm">ссылка на метод</a></span><span class="mono"><b>]</b></span><span>
<br />
</span></span></td><td align="left" valign="top" width="103">
<span>не определён
<br />
</span></td><td align="left" valign="top" width="467">
<span>Любой класс (включая вышеупомянутые date, table и file) можно вывести используя пользовательский метод, который должен принимать 3 параметра: ключ, объект и опции вызова ^json:string[] (последнее нужно для рекурсивного вывода пользовательских объектов).
<br />
</span></td></tr></table>
<br />

<br />
</span><span class="h1"><b>Пример
<br />
</b></span><span class="mono"><span class="monoblue"><b>@main[]
<br />
$h[
<br />
&nbsp;&nbsp;&nbsp;$.void[]
<br />
&nbsp;&nbsp;&nbsp;$.bool(true)
<br />
&nbsp;&nbsp;&nbsp;$.double(1/2)
<br />
&nbsp;&nbsp;&nbsp;$.string[русские&nbsp;буквы]
<br />
&nbsp;&nbsp;&nbsp;$.hash[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.e[ee]
<br />
&nbsp;&nbsp;&nbsp;]
<br />
&nbsp;&nbsp;&nbsp;$.date[^date::create(2006;08;18;06;09;00)]
<br />
&nbsp;&nbsp;&nbsp;$.table[^table::create{c1&nbsp;&nbsp;&nbsp;c2&nbsp;&nbsp;&nbsp;c3^#0Av1&nbsp;&nbsp;&nbsp;v2&nbsp;&nbsp;&nbsp;v3^#0Av4&nbsp;&nbsp;&nbsp;v5&nbsp;&nbsp;&nbsp;v6}]
<br />
&nbsp;&nbsp;&nbsp;$.file[^file::create[text;zigi.txt;file-content]]
<br />
&nbsp;&nbsp;&nbsp;$.img[^image::create(100;100;0)]
<br />
]
<br />
^json:string[$h;
<br />
&nbsp;&nbsp;&nbsp;$.indent(true)
<br />
&nbsp;&nbsp;&nbsp;$.table[array]
<br />
&nbsp;&nbsp;&nbsp;$.file[base64]
<br />
&nbsp;&nbsp;&nbsp;$.image[$image_handler]
<br />
]
<br />

<br />
@image_handler[key;value]
<br />
"custom&nbsp;value&nbsp;of&nbsp;image&nbsp;$key"</b></span></span><span class="mono"><span class="monoblue"><b>
<br />

<br />
</b></span></span><span>В результате выполнения будет выведено:</span><span class="mono"><span class="monoblue"><b>
<br />
</b></span></span><span class="mono"><b>{
<br />
&nbsp;&nbsp;&nbsp;"void":"",
<br />
&nbsp;&nbsp;&nbsp;"bool":true,
<br />
&nbsp;&nbsp;&nbsp;"double":0.5,
<br />
&nbsp;&nbsp;&nbsp;"string":"русские&nbsp;буквы",
<br />
&nbsp;&nbsp;&nbsp;"hash":{
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"e":"ee"
<br />
&nbsp;&nbsp;&nbsp;},
<br />
&nbsp;&nbsp;&nbsp;"date":"2006-08-18&nbsp;06:09:00",
<br />
&nbsp;&nbsp;&nbsp;"table":[
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;["c1","c2","c3"],
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;["v1","v2","v3"],
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;["v4","v5","v6"]
<br />
&nbsp;&nbsp;&nbsp;],
<br />
&nbsp;&nbsp;&nbsp;"file":{
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"class":"file",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name":"zigi.txt",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"size":12,
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"content-type":"text\/plain",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"mode":"text",
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"base64":"ZmlsZS1jb250ZW50"
<br />
&nbsp;&nbsp;&nbsp;},
<br />
&nbsp;&nbsp;&nbsp;"img":"custom&nbsp;value&nbsp;of&nbsp;image&nbsp;img"
<br />
}
<br />
</b></span></span><br />




</body>
</html>